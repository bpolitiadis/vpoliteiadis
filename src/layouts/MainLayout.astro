---
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import { Image } from 'astro:assets';
// Optional: map page background slugs to imported assets so Astro optimizes them
import aboutBg from '../assets/images/about-bg.png';
import blogBg from '../assets/images/blog-bg.png';
import projectsBg from '../assets/images/projects-bg.png';
import creativeBg from '../assets/images/creative-bg.png';
import contactBg from '../assets/images/contact-bg.png';

const backgroundMap: Record<string, any> = {
  'about-bg': aboutBg,
  'blog-bg': blogBg,
  'projects-bg': projectsBg,
  'creative-bg': creativeBg,
  'contact-bg': contactBg,
};

export interface Props {
  title: string;
  description?: string;
  currentPath?: string;
  image?: string;
  type?: string;
  publishedAt?: string;
  updatedAt?: string;
  author?: string;
  keywords?: string | string[];
  /** Optional background image slug from `/public/images` to cover the whole page */
  bgSlug?: string;
  /** Eager-load background image for above-the-fold heavy pages */
  bgEager?: boolean;
  /** Optional utility classes to control background image opacity (e.g., 'opacity-60 md:opacity-80') */
  bgOpacityClass?: string;
  /** Optional utility classes to control the gradient overlay strength */
  bgOverlayClass?: string;
}

const { 
  title, 
  description = "Full-Stack Developer & AI Visionary - Vasileios Politeiadis",
  currentPath,
  // Use VP logo as default OG image (small and always present)
  image = '/images/og-default.webp',
  type = 'website',
  publishedAt,
  updatedAt,
  author = 'Vasileios Politeiadis',
  keywords,
  bgSlug,
  bgEager = false,
  bgOpacityClass = 'opacity-40 md:opacity-50',
  bgOverlayClass = 'from-black/30 via-black/15 to-black/35'
} = Astro.props;

// Prefer actual request URL to avoid canonical mistakes; fall back to provided path
const pathname = currentPath ?? Astro.url.pathname;
const canonicalURL = new URL(pathname, Astro.site);
const ogImageURL = new URL(image, Astro.site);

// JSON-LD is served as first-party endpoints to respect CSP without unsafe-inline
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <!-- Profile verification & identity hints for crawlers -->
    <link rel="me" href="https://github.com/bpolitiadis" />
    <link rel="me" href="https://www.linkedin.com/in/vpoliteiadis" />
    <link rel="me" href="https://www.instagram.com/arte.imaginari/" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/images/avatar.png" type="image/png" />
    <link rel="shortcut icon" href="/images/avatar.png" type="image/png" />
    <link rel="apple-touch-icon" href="/images/avatar.png" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    {keywords && (
      <meta name="keywords" content={Array.isArray(keywords) ? keywords.join(', ') : keywords} />
    )}
    <title>{title}</title>
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    <!-- Language alternates -->
    <link rel="alternate" hreflang="en" href={canonicalURL} />
    <link rel="alternate" hreflang="x-default" href={canonicalURL} />
    
    <!-- Preload critical resources -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- Preload critical fonts with font-display: swap for performance -->
    <link rel="preload" as="style" href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600;700&display=swap" />
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- DNS prefetch for external resources -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com" />
    <link rel="dns-prefetch" href="//fonts.gstatic.com" />
    
    <!-- Preload critical images for LCP optimization -->
    <link rel="preload" as="image" href="/images/vp-logo-480.webp" type="image/webp" />
    <link rel="preload" as="image" href="/images/avatar.png" type="image/png" />
    
    <!-- Performance meta tags -->
    <meta name="theme-color" content="#39FF14" />
    <meta name="color-scheme" content="dark" />
    
    <!-- Structured data for SEO -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Vasileios Politeiadis",
      "url": "https://vpoliteiadis.com",
      "image": "https://vpoliteiadis.com/images/avatar.png",
      "sameAs": [
        "https://github.com/bpolitiadis",
        "https://www.linkedin.com/in/vpoliteiadis",
        "https://www.instagram.com/arte.imaginari/"
      ],
      "jobTitle": "Full-Stack Developer & AI Visionary",
      "worksFor": {
        "@type": "Organization",
        "name": "Independent"
      }
    })} />
    
    <!-- Open Graph meta tags -->
    <meta property="og:type" content={type} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={ogImageURL} />
    <meta property="og:image:alt" content={title} />
    <meta property="og:site_name" content="Vasileios Politeiadis" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter Card meta tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImageURL} />
    <meta name="twitter:image:alt" content={title} />
    
    <!-- Additional meta tags -->
    {publishedAt && <meta property="article:published_time" content={publishedAt} />}
    {updatedAt && <meta property="article:modified_time" content={updatedAt} />}
    {author && <meta property="article:author" content={author} />}
    
    <!-- Security headers -->
    <meta http-equiv="X-Content-Type-Options" content="nosniff" />
    <meta http-equiv="X-Frame-Options" content="DENY" />
    <meta http-equiv="X-XSS-Protection" content="1; mode=block" />
    <meta http-equiv="Referrer-Policy" content="strict-origin-when-cross-origin" />
    
    <!-- Resource hints for performance -->
    <link rel="dns-prefetch" href="//www.google-analytics.com" />
    <link rel="dns-prefetch" href="//vercel.live" />
    
    <!-- Critical CSS inline for above-the-fold content -->
    <style>
      /* Critical CSS for Matrix theme */
      :root {
        --neon-lime: #39FF14;
        --matrix-black: #0A0A0A;
        --matrix-white: #E4FFE4;
      }
      
      body {
        background-color: var(--matrix-black);
        color: var(--matrix-white);
        font-family: 'Inter', system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      .font-orbitron {
        font-family: 'Orbitron', sans-serif;
      }
      
      /* Ensure smooth scrolling */
      html {
        scroll-behavior: smooth;
      }
      
      /* Optimize images */
      img {
        max-width: 100%;
        height: auto;
      }
      
      /* Font loading optimization */
      .font-loading {
        font-display: swap;
      }
      
      /* Performance optimizations */
      * {
        box-sizing: border-box;
      }
      
      /* Optimize animations */
      @media (prefers-reduced-motion: reduce) {
        *, *::before, *::after {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          transition-duration: 0.01ms !important;
        }
      }
    </style>
  </head>
  <body class="min-h-screen bg-background text-foreground transition-colors duration-300">
    {(() => {
      if (!bgSlug) return null;
      const optimized = backgroundMap[bgSlug];
      return (
        <div class="pointer-events-none fixed inset-0 z-0" aria-hidden="true">
          {optimized ? (
            <Image
              src={optimized}
              alt=""
              widths={[480, 800, 1200, 1600, 2400]}
              sizes="100vw"
              format="webp"
              loading={bgEager ? 'eager' : 'lazy'}
              class={`w-full h-full object-cover ${bgOpacityClass}`}
              fetchpriority={bgEager ? 'high' : 'auto'}
            />
          ) : (
            <picture>
              <source srcset={`/images/${bgSlug}-1200.avif 1200w, /images/${bgSlug}-800.avif 800w, /images/${bgSlug}-480.avif 480w`} type="image/avif" />
              <source srcset={`/images/${bgSlug}-1200.webp 1200w, /images/${bgSlug}-800.webp 800w, /images/${bgSlug}-480.webp 480w`} type="image/webp" />
              <img 
                src={`/images/${bgSlug}.png`}
                alt=""
                class={`w-full h-full object-cover ${bgOpacityClass}`}
                width="2400" height="1400"
                loading={bgEager ? 'eager' : 'lazy'}
                decoding="async"
                fetchpriority={bgEager ? 'high' : 'low'}
                sizes="100vw"
              />
            </picture>
          )}
          <div class={`absolute inset-0 bg-gradient-to-b ${bgOverlayClass}`}></div>
        </div>
      );
    })()}
    
    <!-- Skip to main content link for accessibility -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary text-primary-foreground px-4 py-2 rounded-md z-50" aria-label="Skip to main content">
      Skip to main content
    </a>
    
    <div class="relative z-10 flex flex-col min-h-screen">
      <!-- Navbar -->
      <Navbar currentPath={currentPath} />
      
      <!-- Main Content -->
      <main id="main-content" class="flex-1">
        <slot />
      </main>
      
      <Footer />
    </div>
    
    <!-- Theme initialization (external, CSP-safe) -->
    <script is:inline src="/scripts/theme-init.js" defer></script>
    <!-- Performance optimization script -->
    <script src="/scripts/performance.js" defer></script>
  </body>
</html>

<style is:global>
  @import '../styles/global.css';
</style> 