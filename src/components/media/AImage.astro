---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { imagePresets, defaultPreset } from '../../lib/image-presets';

export interface Props {
  src: ImageMetadata;
  alt?: string;
  width?: number;
  height?: number;
  class?: string;
  preset?: keyof typeof imagePresets;
  sizes?: string;
  loading?: 'eager' | 'lazy';
  decoding?: 'auto' | 'sync' | 'async';
  fetchpriority?: 'high' | 'low' | 'auto';
}

const {
  src,
  alt = '',
  width,
  height,
  class: className = '',
  preset,
  sizes,
  loading = 'lazy',
  decoding = 'async',
  fetchpriority = 'auto',
} = Astro.props;

const selectedPreset = preset ? imagePresets[preset] : defaultPreset;
const computedSizes = sizes ?? selectedPreset.sizes;
---

<Image
  src={src}
  alt={alt}
  widths={selectedPreset.widths}
  sizes={computedSizes}
  format="webp"
  class={className}
  loading={loading}
  decoding={decoding}
  fetchpriority={fetchpriority}
  {...(width ? { width } : {})}
  {...(height ? { height } : {})}
/>


