---
import { Image } from 'astro:assets';
import avatarSrc from '../assets/images/avatar.png';
import bgSrc from '../assets/images/home-bg.png';
import DecryptedText from './DecryptedText.tsx';
import TextType from './TextType.tsx';

// Hero component with Matrix-inspired animations and neon glow effects
// Features: Animated background, VP logo, smooth text animations, and interactive CTA
---

<!-- Background decorative image (content-neutral) -->
<div class="absolute inset-0 overflow-hidden pointer-events-none bg-gradient-to-br from-background via-muted/20 to-background z-0" aria-hidden="true">
  <Image src={bgSrc} alt="" class="w-full h-full object-cover opacity-25" widths={[480,800,1200,1600,2000]} sizes="100vw" format="webp" loading="eager" fetchpriority="high" />
</div>

<!-- Matrix Rain Canvas -->
<canvas 
  id="matrixCanvas" 
  class="absolute inset-0 pointer-events-none opacity-20 z-0"
  aria-hidden="true"
></canvas>

<!-- Main Content Container -->
<div class="relative z-10 flex flex-col items-center justify-center min-h-[calc(100svh-4rem)] md:min-h-[calc(100dvh-4rem)] px-4 sm:px-6 lg:px-8 py-8 text-center">
  
  <!-- Avatar -->
  <div class="mb-6 group mt-2 sm:mt-6 lg:mt-8">
    <div class="relative">
      <Image 
        src={avatarSrc}
        alt="Portrait of Vasileios Politeiadis"
        class="relative w-32 h-32 mx-auto rounded-full border-2 border-primary shadow-neon object-cover"
        widths={[128, 160, 192]}
        sizes="128px"
        format="webp"
        loading="eager"
        fetchpriority="high"
      />
    </div>
  </div>

  <!-- Main Headline with DecryptedText Effect -->
  <h1 class="text-3xl sm:text-5xl lg:text-6xl xl:text-7xl leading-tight font-orbitron font-bold mb-6 text-center">
    <span class="block text-center">
      <DecryptedText 
        text="Full-Stack Developer"
        speed={60}
        maxIterations={20}
        sequential={true}
        revealDirection="start"
        characters="01ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_+{}[]|\:;'<>?,./~`"
        className="text-primary text-glow text-center"
        encryptedClassName="text-primary/40"
        animateOn="view"

        client:load
      />
    </span>
    <div id="hero-subtitle" class="flex flex-col sm:flex-row sm:items-center sm:justify-center sm:gap-2 mt-2 text-lg sm:text-xl lg:text-2xl xl:text-3xl text-center">
      <DecryptedText 
        text="QA Automation Engineer"
        speed={60}
        maxIterations={20}
        sequential={true}
        revealDirection="center"
        characters="01ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_+{}[]|\:;'<>?,./~`"
        className="text-secondary text-center"
        encryptedClassName="text-secondary/40"
        animateOn="view"
        client:load
      />
      <span class="hidden sm:inline text-secondary">Â·</span>
      <DecryptedText 
        text="AI Powered Solutions"
        speed={80}
        maxIterations={20}
        sequential={true}
        revealDirection="center"
        characters="01ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_+{}[]|\:;'<>?,./~`"
        className="text-secondary text-center"
        encryptedClassName="text-secondary/40"
        animateOn="view"
        onComplete={() => {
          console.log('ðŸŽ¯ Both subtitle texts decryption completed - starting animation sequence');
          
          // Trigger dynamic subtitle animation
          setTimeout(() => {
            const description = document.getElementById('hero-description');
            if (description) {
              description.classList.add('animate-description');
              console.log('âœ… Dynamic subtitle animation triggered');
            }
          }, 800);
          
          // Then trigger CTA after subtitle completes
          setTimeout(() => {
            const cta = document.getElementById('hero-cta');
            if (cta) {
              cta.classList.add('animate-cta');
              console.log('âœ… CTA animation triggered');
            }
          }, 1800);
        }}
        client:load
      />
    </div>
  </h1>

  <!-- Dynamic Subtitle with TextType Component -->
  <!-- Rotating quotes with typing animation - positioned between headline and CTA -->
  <div id="hero-description" class="mb-8 max-w-4xl mx-auto text-center opacity-0">
    <TextType 
      text={[
        "Certified bug hunter.",
        "Breaking code so you don't have to.",
        "Writing tests that test the limits.",
        "Debugging reality.",
        "Automating workflows, amplifying humans.",
        "Partnering with AI to outpace time.",
        "Engineering the future, accelerated by AI.",
        "Precision, creativity, and artificial brains.",
        "I break things professionally.",
        "Stress-testing reality.",
        "I automate therefore I am.",
        "Writing code that watches your code.",
        "Smarter code through artificial brains.",
        "The best way to predict the future is to invent it. â€” Alan Kay",
        "Imagination is more important than knowledge. â€” Albert Einstein",
        "Any sufficiently advanced technology is indistinguishable from magic. â€” Arthur C. Clarke",
        "The computer was born to solve problems that did not exist before. â€” Bill Gates",
        "The true sign of intelligence is not knowledge but imagination. â€” Albert Einstein",
        "Know thyself. â€” Socrates",
        "The mind is everything. What you think you become. â€” Buddha",
        "The future is already here â€” it's just not evenly distributed. â€” William Gibson"
      ]}
      typingSpeed={75}
      pauseDuration={1500}
      deletingSpeed={50}
      loop={true}
      showCursor={true}
      cursorCharacter="|"
      cursorClassName="text-primary text-glow"
      cursorBlinkDuration={0.8}
      className="text-lg sm:text-xl lg:text-2xl xl:text-3xl font-inter text-foreground/90 leading-relaxed"
      startOnVisible={true}
      client:load
    />
  </div>

  <!-- CTA Buttons with Enhanced Matrix Animation -->
  <div id="hero-cta" class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-0 opacity-0">
    <!-- Primary CTA: Explore My Work -->
    <a 
      href="/projects" 
      class="group relative overflow-hidden px-8 py-4 text-lg sm:px-10 sm:py-5 sm:text-xl bg-gradient-to-r from-neon-cyan to-cyan-400 text-background font-orbitron font-bold tracking-wide rounded-2xl border-0 shadow-lg shadow-cyan/25 transition-all duration-300 hover:shadow-cyan/40 hover:shadow-2xl hover:-translate-y-1 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-neon-cyan/70 focus-visible:ring-offset-2 focus-visible:ring-offset-background"
      aria-label="Explore my projects and portfolio"
    >
      <!-- Subtle background animation -->
      <div class="absolute inset-0 bg-gradient-to-r from-neon-cyan via-cyan-400 to-neon-cyan opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
      
      <span class="relative z-10 flex items-center gap-3">
        <svg class="h-6 w-6 sm:h-7 sm:w-7 transition-transform duration-300 group-hover:translate-x-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
          <line x1="5" y1="12" x2="19" y2="12" />
          <polyline points="12,5 19,12 12,19" />
        </svg>
        <span>Explore My Work</span>
      </span>
    </a>
    
    <!-- Secondary CTA: Learn More -->
    <a 
      href="/about" 
      class="group relative overflow-hidden px-8 py-4 text-lg sm:px-10 sm:py-5 sm:text-xl bg-transparent text-foreground font-orbitron font-bold tracking-wide rounded-2xl border-2 border-primary/30 backdrop-blur-sm transition-all duration-300 hover:bg-primary/10 hover:border-primary/60 hover:shadow-neon/30 hover:-translate-y-1 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/70 focus-visible:ring-offset-2 focus-visible:ring-offset-background"
      aria-label="Learn more about my background and experience"
    >
      <!-- Subtle glow effect on hover -->
      <div class="absolute inset-0 bg-gradient-to-r from-primary/5 to-secondary/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-2xl"></div>
      
      <span class="relative z-10 flex items-center gap-3">
        <svg class="h-6 w-6 sm:h-7 sm:w-7 transition-transform duration-300 group-hover:scale-110" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
          <circle cx="12" cy="12" r="10" />
          <line x1="12" y1="16" x2="12" y2="12" />
          <line x1="12" y1="8" x2="12.01" y2="8" />
        </svg>
        <span>Learn More</span>
      </span>
    </a>
  </div>
</div>

<!-- Matrix Code Rain Animation Script - Loaded through Astro's script handling -->
<script is:inline src="/scripts/matrix-rain.js"></script>

<!-- Keep only component-specific extras not already in global Tailwind layers -->
<style>
  @keyframes spin-slow { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
  .animate-spin-slow { animation: spin-slow 8s linear infinite; }
  
  /* Enhanced sequential animations for hero elements */
  .hero-animate-in {
    animation-fill-mode: both;
    animation-duration: 0.8s;
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Clean entrance animations */
  .animate-description {
    animation: cleanFadeIn 1s ease-out both;
    opacity: 1 !important;
  }
  
  .animate-cta {
    animation: cleanFadeIn 1.2s ease-out both;
    opacity: 1 !important;
  }
  
  /* Clean fade-in */
  @keyframes cleanFadeIn {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .hero-animate-in,
    .animate-description,
    .animate-cta {
      animation: none;
      opacity: 1;
      transform: none;
      filter: none;
    }
  }
</style>

<script>
  // Enhanced hero animation orchestration
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize description and CTA as hidden
    const heroDescription = document.getElementById('hero-description');
    const heroCta = document.getElementById('hero-cta');
    
    // Ensure proper initial state
    if (heroDescription) heroDescription.style.opacity = '0';
    if (heroCta) heroCta.style.opacity = '0';
    
    // Fallback animation sequence in case callbacks fail
    setTimeout(() => {
      if (heroDescription && !heroDescription.classList.contains('animate-description')) {
        heroDescription.classList.add('animate-description');
        console.log('ðŸ”„ Fallback: Dynamic subtitle animation triggered');
      }
    }, 4000);
    
    setTimeout(() => {
      if (heroCta && !heroCta.classList.contains('animate-cta')) {
        heroCta.classList.add('animate-cta');
        console.log('ðŸ”„ Fallback: CTA animation triggered');
      }
    }, 5000);
    
    // Animation sequence is now controlled by DecryptedText onComplete callbacks
    // Subtitle texts are visible by default, dynamic subtitle and CTA animate in sequence
  });
</script>