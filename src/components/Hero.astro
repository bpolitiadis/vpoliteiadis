---
import { Image } from 'astro:assets';
import avatarSrc from '../assets/images/avatar.png';
import bgSrc from '../assets/images/home-bg.png';
import HeroAnimationController from './HeroAnimationController.tsx';

// Hero component with Matrix-inspired animations and neon glow effects
// Features: Animated background, VP logo, smooth text animations, and interactive CTA
---

<!-- Background decorative image (content-neutral) -->
<div class="absolute inset-0 overflow-hidden pointer-events-none bg-gradient-to-br from-background via-muted/20 to-background z-0" aria-hidden="true">
  <Image src={bgSrc} alt="" class="w-full h-full object-cover opacity-25" widths={[480,800,1200,1600,2000]} sizes="100vw" format="webp" loading="eager" fetchpriority="high" />
</div>

<!-- Matrix Rain Canvas -->
<canvas 
  id="matrixCanvas" 
  class="absolute inset-0 pointer-events-none opacity-20 z-0"
  aria-hidden="true"
></canvas>

<!-- Main Content Container -->
<div class="relative z-10 flex flex-col items-center justify-center min-h-[calc(100svh-4rem)] md:min-h-[calc(100dvh-4rem)] px-4 sm:px-6 lg:px-8 py-8 text-center">
  
  <!-- Avatar - No animations, just static display -->
  <div class="mb-6 group mt-2 sm:mt-6 lg:mt-8">
    <div class="relative">
      <Image 
        src={avatarSrc}
        alt="Portrait of Vasileios Politeiadis"
        class="relative w-32 h-32 mx-auto rounded-full border-2 border-primary shadow-neon object-cover"
        widths={[128, 160, 192]}
        sizes="128px"
        format="webp"
        loading="eager"
        fetchpriority="high"
      />
    </div>
  </div>

  <!-- Hero Animation Controller - Manages headline, subtitle, and TextType sequence -->
  <div id="hero-content" class="opacity-0 transition-opacity duration-1000">
    <HeroAnimationController 
      quotes={[
        "Certified bug hunter.",
        "Debugging reality.",
        "I break things professionally.",
        "Automating workflows, amplifying humans.",
        "Human creativity, artificial brains.",
        "I break code so you don't have to.",
        "Writing tests that test the limits.",
        "Partnering with AI to outpace time.",
        "Engineering the future, accelerated by AI.",
        "I write code that watches your code.",
        "The best way to predict the future is to invent it. ‚Äî AK",
        "Imagination is more important than knowledge. ‚Äî AE",
        "Any sufficiently advanced technology is indistinguishable from magic. ‚Äî AC",
        "The computer was born to solve problems that did not exist before. ‚Äî BG",
        "The future is already here ‚Äî it's just not evenly distributed. ‚Äî WG"
      ]}
      client:load
    />
  </div>

  <!-- CTA Buttons - Simple reveal, no complex animations -->
  <div id="hero-cta" class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-0 opacity-0 transform translate-y-4 transition-all duration-1000">
    <!-- Primary CTA: Explore My Work -->
    <a 
      href="/projects" 
      class="group relative overflow-hidden px-8 py-4 text-lg sm:px-10 sm:py-5 sm:text-xl bg-gradient-to-r from-neon-cyan to-cyan-400 text-background font-orbitron font-bold tracking-wide rounded-2xl border-0 shadow-lg shadow-cyan/25 transition-all duration-300 hover:shadow-cyan/40 hover:shadow-2xl hover:-translate-y-1 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-neon-cyan/70 focus-visible:ring-offset-2 focus-visible:ring-offset-background"
      aria-label="Explore my projects and portfolio"
    >
      <!-- Subtle background animation -->
      <div class="absolute inset-0 bg-gradient-to-r from-neon-cyan via-cyan-400 to-neon-cyan opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
      
      <span class="relative z-10 flex items-center gap-3">
        <svg class="h-6 w-6 sm:h-7 sm:w-7 transition-transform duration-300 group-hover:translate-x-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
          <line x1="5" y1="12" x2="19" y2="12" />
          <polyline points="12,5 19,12 12,19" />
        </svg>
        <span>Explore My Work</span>
      </span>
    </a>
    
    <!-- Secondary CTA: Learn More -->
    <a 
      href="/about" 
      class="group relative overflow-hidden px-8 py-4 text-lg sm:px-10 sm:py-5 sm:text-xl bg-transparent text-foreground font-orbitron font-bold tracking-wide rounded-2xl border-2 border-primary/30 backdrop-blur-sm transition-all duration-300 hover:bg-primary/10 hover:border-primary/60 hover:shadow-neon/30 hover:-translate-y-1 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/70 focus-visible:ring-offset-2 focus-visible:ring-offset-background"
      aria-label="Learn more about my background and experience"
    >
      <!-- Subtle glow effect on hover -->
      <div class="absolute inset-0 bg-gradient-to-r from-primary/5 to-secondary/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-2xl"></div>
      
      <span class="relative z-10 flex items-center gap-3">
        <svg class="h-6 w-6 sm:h-7 sm:w-7 transition-transform duration-300 group-hover:scale-110" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
          <circle cx="12" cy="12" r="10" />
          <line x1="12" y1="16" x2="12" y2="12" />
          <line x1="12" y1="8" x2="12.01" y2="8" />
        </svg>
        <span>Learn More</span>
      </span>
    </a>
  </div>
</div>

<!-- Matrix Code Rain Animation Script - Loaded through Astro's script handling -->
<script is:inline src="/scripts/matrix-rain.js"></script>

<!-- Keep only component-specific extras not already in global Tailwind layers -->
<style>
  @keyframes spin-slow { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
  .animate-spin-slow { animation: spin-slow 8s linear infinite; }
  
  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .animate-spin-slow {
      animation: none;
      opacity: 1;
      transform: none;
      filter: none;
    }
  }
</style>

<script>
  // Simple hero animation orchestration
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize elements as hidden
    const heroContent = document.getElementById('hero-content');
    const heroCta = document.getElementById('hero-cta');
    
    // Ensure proper initial state
    if (heroContent) heroContent.style.opacity = '0';
    if (heroCta) {
      heroCta.style.opacity = '0';
      heroCta.style.transform = 'translateY(20px)';
    }
    
    // Listen for matrix rain to fill the screen
    window.addEventListener('matrixRainFilled', (event) => {
      console.log('üé¨ Matrix rain filled, starting hero sequence');
      
      // Start headline animation sequence
      if (heroContent) {
        setTimeout(() => {
          heroContent.style.opacity = '1';
          console.log('üéØ Hero content revealed, headline animation starting');
        }, 500); // Small delay for visual effect
      }
    });
    
    // Fallback: if matrix rain doesn't trigger within 3 seconds, start anyway
    setTimeout(() => {
      if (heroContent && heroContent.style.opacity === '0') {
        console.log('‚è∞ Fallback: Starting hero sequence after timeout');
        heroContent.style.opacity = '1';
      }
    }, 3000);
  });
</script>