---
export interface Props {
  project: {
    slug: string;
    data: {
      title: string;
      description: string;
      excerpt?: string;
      coverImage: string;
      coverVideo?: string;
      tags: string[];
      techStack: string[];
      featured: boolean;
      status: string;
      role?: string;
      liveUrl?: string;
    };
  };
  index?: number;
}

const { project, index = 0 } = Astro.props;
import VercelImage from './VercelImage.astro';
import NeonCTA from './NeonCTA.astro';
---

<article 
  class="group relative glass-card glass-card-accent rounded-2xl overflow-hidden backdrop-blur-md transition-all duration-300 hover:shadow-neon-lg hover:border-primary/60 reveal"
  role="article"
  aria-labelledby={`proj-${project.slug}-title`}
  style={`transition-delay:${index * 80}ms`}
>
  <!-- Project Cover - Compact image container aligned with content -->
  <div class="relative w-full h-48 sm:h-56 md:h-64 overflow-hidden bg-gradient-to-br from-cyber-gray to-dark-slate">
    <!-- Responsive background pattern for loading state -->
    <div class="absolute inset-0 bg-matrix-pattern opacity-5"></div>
    
    <!-- Cover Image/Video with responsive sizing -->
    {project.data.coverVideo ? (
      <video
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-700 ease-out motion-reduce:transition-none motion-reduce:group-hover:scale-100"
        autoplay
        muted
        loop
        playsinline
        preload="metadata"
        poster={project.data.coverImage}
        aria-label={`${project.data.title} preview video`}
      >
        <source src={project.data.coverVideo} type="video/mp4" />
        <!-- Fallback image if video fails -->
        <VercelImage 
          src={project.data.coverImage} 
          alt={`${project.data.title} cover image`} 
          class="w-full h-full object-cover" 
          loading="lazy" 
          decoding="async" 
          fetchpriority="low"
          sizes="(max-width: 640px) 100vw, (max-width: 768px) 50vw, (max-width: 1024px) 50vw, 33vw"
        />
      </video>
    ) : (
      <VercelImage
        src={project.data.coverImage}
        alt={`${project.data.title} project cover image`}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-700 ease-out motion-reduce:transition-none motion-reduce:group-hover:scale-100"
        loading="lazy"
        decoding="async"
        fetchpriority="low"
        sizes="(max-width: 640px) 100vw, (max-width: 768px) 50vw, (max-width: 1024px) 50vw, 33vw"
      />
    )}
    
    <!-- Gradient overlay for better text readability -->
    <div class="absolute inset-0 bg-gradient-to-t from-background/80 via-background/20 to-transparent opacity-0 
                group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"></div>
    
    <!-- Subtle border glow effect -->
    <div class="absolute inset-0 border border-primary/20 group-hover:border-primary/40 transition-colors duration-300 pointer-events-none"></div>
  </div>

  <!-- Project Content - Padded container -->
  <div class="p-6 md:p-8">
    <h3 id={`proj-${project.slug}-title`} class="text-2xl md:text-[1.6rem] font-orbitron neon-heading mb-3">
      {project.data.title}
    </h3>
    
    <p class="text-sm md:text-base text-text-muted mb-5 leading-relaxed">
      {project.slug === 'upiria'
        ? 'Built a scalable frontend and testing foundation at an early stage of a fast-growing travel startup.'
        : project.slug === 'casa-capoeira'
        ? 'Created a fast, reliable CMS to help capoeira schools manage classes, payments, and community with ease.'
        : (project.data.excerpt || project.data.description)}
    </p>

    <!-- HUD-style metadata -->
    <div class="rounded-lg border border-primary/30 bg-card/40 p-4 mb-6 backdrop-blur-sm">
      <div class="text-xs md:text-sm font-mono text-matrix-white/80 tracking-tight">
        <div class="flex flex-wrap gap-2 md:gap-3 items-start mb-1">
          <span class="text-neon-lime/90">Focus:</span>
          <span class="text-neon-lime/90">{project.data.role ?? (project.slug === 'upiria' ? 'Frontend + QA' : 'Fullâ€‘Stack + Product')}</span>
        </div>
        <div class="my-2 h-px bg-primary/20"></div>
        <div class="flex flex-wrap gap-2 md:gap-3 items-start">
          <span class="text-neon-lime/90">Tech:</span>
          <span class="text-neon-lime/90">{project.data.techStack.slice(0,3).join(', ')}</span>
        </div>
      </div>
    </div>

    <!-- Dual CTA Buttons -->
    <div class="flex flex-col sm:flex-row gap-3 justify-center items-center">
      <!-- Learn More (Case Study) -->
      <a
        href={`/projects/${project.slug}`}
        class="inline-flex items-center justify-center px-4 py-2.5 bg-transparent border border-primary/40 text-primary hover:bg-primary/10 hover:border-primary/60 transition-all duration-300 rounded-lg text-sm font-medium group focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/50 focus-visible:ring-offset-2 focus-visible:ring-offset-background"
        aria-label={`Read case study: ${project.data.title}`}
      >
        <svg class="w-4 h-4 mr-2 group-hover:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        Learn More
      </a>
      
      <!-- View Live (External Project) -->
      {project.data.liveUrl && (
        <NeonCTA 
          href={project.data.liveUrl} 
          ariaLabel={`Visit live project: ${project.data.title}`} 
          class="px-4 py-2.5 text-sm"
          text="View Live"
        />
      )}
    </div>
  </div>
</article>

<style>
  /* Enhanced hover effects for better UX */
  .group:hover .group-hover\:scale-105 {
    transform: scale(1.05);
  }

  /* Smooth transitions for all interactive elements */
  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Focus visible styles for accessibility */
  .focus-visible\:outline-none:focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .focus-visible\:ring-2:focus-visible {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  }

  .focus-visible\:ring-primary\/50:focus-visible {
    --tw-ring-color: rgb(57 255 20 / 0.5);
  }

  .focus-visible\:ring-offset-2:focus-visible {
    --tw-ring-offset-width: 2px;
  }

  .focus-visible\:ring-offset-background:focus-visible {
    --tw-ring-offset-color: #0A0A0A;
  }

  /* Responsive text sizing */
  @media (max-width: 640px) {
    .text-2xl {
      font-size: 1.5rem;
      line-height: 2rem;
    }
  }

  @media (max-width: 768px) {
    .md\:text-\[1\.6rem\] {
      font-size: 1.5rem;
      line-height: 2rem;
    }
  }

  /* Enhanced backdrop blur for better readability */
  .backdrop-blur-sm {
    backdrop-filter: blur(4px);
  }

  /* Smooth image scaling with hardware acceleration */
  .group-hover\:scale-105 {
    will-change: transform;
    transform: translateZ(0);
  }

  /* Optimized transitions for reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .transition-transform,
    .transition-all {
      transition: none;
    }
    
    .group-hover\:scale-105 {
      transform: none;
    }
  }
</style> 