---
export interface Props {
  project: {
    slug: string;
    data: {
      title: string;
      description: string;
      excerpt?: string;
      coverImage: string;
      coverVideo?: string;
      tags: string[];
      techStack: string[];
      featured: boolean;
      status: string;
    };
  };
}

const { project } = Astro.props;
---

<article 
  class="group relative border border-secondary/30 rounded-xl bg-card/70 p-6 md:p-8 transition-all hover:border-primary hover:shadow-neon"
>
  <!-- Featured Badge -->
  {project.data.featured && (
    <div class="bg-neon-lime text-black px-2 py-1 rounded font-bold text-xs uppercase absolute -mt-4 -ml-4">
      Featured
    </div>
  )}

  <!-- Project Cover -->
  <div class="relative overflow-hidden h-48 mb-6 rounded-lg content-visibility-auto">
    <img src="/images/project-card-1-bg.png" alt="" class="absolute inset-0 w-full h-full object-cover opacity-15" width="1200" height="480" loading="lazy" decoding="async" aria-hidden="true" sizes="(max-width: 768px) 100vw, 600px" />
    {project.data.coverVideo ? (
      <video
        class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
        autoplay
        muted
        loop
        playsinline
        preload="metadata"
        poster={project.data.coverImage}
      >
        <source src={project.data.coverVideo} type="video/mp4" />
        <img src={project.data.coverImage} alt={project.data.title} class="w-full h-full object-cover" loading="lazy" decoding="async" fetchpriority="low" />
      </video>
    ) : (
      <img
        src={project.data.coverImage}
        alt={project.data.title}
        class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
        loading="lazy"
        decoding="async"
        fetchpriority="low"
        sizes="(max-width: 768px) 100vw, 600px"
      />
    )}
    
    <!-- Overlay with neon glow effect -->
    <div class="absolute inset-0 bg-gradient-to-t from-background/80 to-transparent opacity-0 
                group-hover:opacity-100 transition-opacity duration-300"></div>
  </div>

  <!-- Project Content -->
  <div>
    <h3 class="text-h3 font-orbitron text-primary mb-3 group-hover:text-foreground transition-colors">
      {project.data.title}
    </h3>
    
    <p class="text-body text-muted-foreground mb-6 line-clamp-3">
      {project.data.excerpt || project.data.description}
    </p>

    <!-- Minimal Tags Display -->
    <div class="flex flex-wrap gap-2 mb-6">
      {project.data.tags.slice(0, 3).map(tag => (
        <span class="bg-secondary/10 border border-secondary/50 text-secondary rounded-full px-3 py-1 text-xs font-medium">
          {tag}
        </span>
      ))}
      {project.data.tags.length > 3 && (
        <span class="bg-digital-emerald/10 border border-digital-emerald/50 text-digital-emerald rounded-full px-3 py-1 text-xs font-medium">
          +{project.data.tags.length - 3}
        </span>
      )}
    </div>

    <!-- CTA Button -->
    <a
      href={`/projects/${project.slug}`}
      class="inline-flex items-center px-4 py-2 bg-transparent border border-primary text-primary 
             hover:bg-primary hover:text-background transition-all duration-300 rounded-lg
             group-hover:animate-glow"
    >
      View Case Study
      <svg class="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
      </svg>
    </a>
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 