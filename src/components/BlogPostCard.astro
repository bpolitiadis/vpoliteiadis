---
export interface BlogPostMeta {
  slug: string;
  title: string;
  excerpt?: string;
  description?: string;
  coverImage?: string;
  tags: string[];
  publishedAt: string | Date;
  readingTime?: string;
}

interface Props {
  post: BlogPostMeta;
  class?: string;
}

const { post, class: className = '' } = Astro.props as Props;
const date = new Date(post.publishedAt).toLocaleDateString('en-US', {
  month: 'long',
  year: 'numeric'
});
---

<article
  class={`group rounded-xl border bg-card/80 text-card-foreground shadow transition-transform duration-300 hover:scale-[1.02] backdrop-blur-md ${className}`}
  data-title={post.title}
  data-excerpt={post.excerpt || post.description}
  data-tags={post.tags.join(',')}
>
  {post.coverImage && (
    <div class="relative mb-4 overflow-hidden rounded-lg">
      <img
        src={post.coverImage}
        alt={`Cover image for ${post.title}`}
        class="h-44 w-full object-cover transition-transform duration-300 group-hover:scale-[1.03]"
        width={800}
        height={352}
        loading="lazy"
        decoding="async"
        sizes="(max-width: 768px) 100vw, 400px"
      />
      <div class="pointer-events-none absolute inset-0 bg-gradient-to-t from-black/30 to-transparent" aria-hidden="true"></div>
    </div>
  )}

  <div class="p-6 pt-0 space-y-3">
    <div class="flex items-center gap-3 text-sm text-muted-foreground">
      <span>{date}</span>
      {post.readingTime && (
        <>
          <span>•</span>
          <span>{post.readingTime}</span>
        </>
      )}
    </div>

    <h3 class="text-lg sm:text-xl font-orbitron font-bold text-neon-lime tracking-tight text-balance break-words hyphens-auto">
      <a href={`/blog/${post.slug}`} class="transition-colors duration-200 hover:text-primary">
        {post.title}
      </a>
    </h3>

    {(post.excerpt || post.description) && (
      <p class="text-foreground/80">
        {post.excerpt || post.description}
      </p>
    )}

    {post.tags?.length > 0 && (
      <div class="flex flex-wrap gap-2 pt-1">
        {post.tags.slice(0, 3).map((tag) => (
          <span class="px-2 py-1 rounded bg-primary/10 text-primary text-xs">
            {tag}
          </span>
        ))}
      </div>
    )}

    <div class="pt-2">
      <a
        href={`/blog/${post.slug}`}
        class="btn-link"
        aria-label={`Read more: ${post.title}`}
      >
        Read More →
      </a>
    </div>
  </div>
</article>


