---
import MainLayout from '../../layouts/MainLayout.astro';
import GlassCard from '../../components/GlassCard.astro';
import NeonCTA from '../../components/NeonCTA.astro';
import ScreenshotFrame from '../../components/ScreenshotFrame.astro';
import { getCollection } from 'astro:content';

const projects = await getCollection('projects');
const project = projects.find((p) => p.slug === 'casa-capoeira');
if (!project) {
  throw new Error('Project "casa-capoeira" not found in content collection.');
}
const data = project.data;
---

<MainLayout 
  title={`${data.title} - Case Study`} 
  description={data.description}
  currentPath={'/projects/casa-capoeira'}
  type="article"
  publishedAt={new Date(data.publishedAt).toISOString()}
  updatedAt={data.updatedAt ? new Date(data.updatedAt).toISOString() : undefined}
  author="Vasileios Politeiadis"
  image={data.coverImage || '/images/vp-logo-800.webp'}
>
  <!-- SEO Structured Data (external, CSP-safe) -->
  <script is:inline type="application/ld+json" src="/structured/project/casa-capoeira.json"></script>

  <section class="bg-matrix-black text-matrix-white">
    <section class="relative py-10 md:py-12 lg:py-14 px-4 sm:px-6 lg:px-8">
      <div class="max-w-7xl mx-auto">
        <!-- Back Button -->
        <div class="mb-6">
          <a 
            href="/projects" 
            class="inline-flex items-center text-neon-lime hover:text-matrix-white transition-colors"
            aria-label="Back to Projects"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
            Back to Projects
          </a>
        </div>

        <!-- Scroll reveal init -->
        <script is:inline src="/scripts/scroll-reveal.js"></script>

        <!-- Hero: text left, screenshot right -->
        <div class="grid lg:grid-cols-2 gap-8 items-start mb-8 reveal">
          <div>
            <h1 class="text-3xl md:text-4xl lg:text-5xl font-orbitron neon-heading mb-3">{data.title}</h1>
            <p class="text-base md:text-lg text-text-muted mb-4 max-w-2xl">
              A tailored CMS for capoeira schools, designed with instructors to streamline scheduling, enrollment, payments, and community.
            </p>
            {data.liveUrl && (
              <NeonCTA href={data.liveUrl} ariaLabel={`View ${data.title} live`}>
                View Live Project
              </NeonCTA>
            )}
          </div>
          <div class="lg:justify-self-end">
            <ScreenshotFrame src={data.coverImage ?? data.featuredImage ?? '/images/vp-logo-800.webp'} alt={data.title} />
          </div>
        </div>

        <!-- About the Project -->
        <GlassCard class="mb-6 reveal">
          <p class="text-sm text-text-muted leading-relaxed">
            {data.about}
          </p>
        </GlassCard>

        <!-- My Contribution: two-column bullets -->
        <GlassCard class="mb-6 reveal">
          <div class="grid md:grid-cols-2 gap-4">
            <div>
              <h2 class="text-sm font-semibold neon-heading mb-1">Product & UI</h2>
              <ul class="list-disc pl-5 text-sm text-text-muted space-y-1">
                <li>Designed the domain model and UI kit, built modular React components for a cohesive experience.</li>
              </ul>
            </div>
            <div>
              <h2 class="text-sm font-semibold neon-heading mb-1">Platform & Testing</h2>
              <ul class="list-disc pl-5 text-sm text-text-muted space-y-1">
                <li>Implemented secure auth and RBAC; added API/E2E tests and CI gates for confident releases.</li>
              </ul>
            </div>
          </div>
        </GlassCard>

        <!-- No duplicate CTA to keep page minimal -->
      </div>
    </section>
  </section>
</MainLayout>

<style>
  .prose { color: var(--foreground); }
  .prose a { color: var(--primary); text-decoration: none; }
  .prose a:hover { color: var(--foreground); text-decoration: underline; }
  .prose code { background-color: var(--muted); color: var(--primary); padding: 0.125rem 0.25rem; border-radius: 0.25rem; }
</style>


