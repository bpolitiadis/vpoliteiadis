---
// Prerender this page for optimal performance
export const prerender = true;

import MainLayout from '../../layouts/MainLayout.astro';
import ProjectCard from '../../components/ProjectCard.astro';
import PageHero from '../../components/PageHero.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import SchemaOrg from '../../components/SchemaOrg.astro';
import { Card, CardContent, CardDescription, CardTitle } from '../../components/ui/card';
import { getCollection } from 'astro:content';

// Get all projects and sort by published date (newest first)
const projects = await getCollection('projects');
const sortedProjects = projects.sort((a, b) => 
  new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime()
);

// Get featured projects only
const featuredProjects = sortedProjects.filter(project => project.data.featured);

// Build breadcrumb
const breadcrumbItems = [
  { name: 'Home', href: '/' },
  { name: 'Projects', href: '/projects' },
];

// Build CollectionPage structured data
const collectionSchema = {
  '@type': 'CollectionPage',
  'name': 'Projects - Vasileios Politeiadis',
  'description': 'Explore my latest projects and case studies in full-stack development, automation, and creative technology.',
  'url': new URL('/projects', Astro.site).toString(),
  'mainEntity': {
    '@type': 'ItemList',
    'itemListElement': featuredProjects.map((project, index) => ({
      '@type': 'ListItem',
      'position': index + 1,
      'item': {
        '@type': 'CreativeWork',
        'name': project.data.title,
        'description': project.data.description,
        'url': new URL(`/projects/${project.slug}`, Astro.site).toString(),
        'image': project.data.coverImage
          ? new URL(project.data.coverImage, Astro.site).toString()
          : undefined,
      },
    })),
  },
};
---

<MainLayout 
  title="Projects - Vasileios Politeiadis"
  description="Explore my latest projects and case studies in full-stack development, automation, and creative technology."
  currentPath="/projects"
  bgSlug="projects-bg"
  bgEager={true}
>
  <!-- Structured Data -->
  <SchemaOrg schema={collectionSchema} />

  <section class="min-h-screen text-matrix-white pb-16 sm:pb-20 md:pb-24" data-testid="page-projects">
    <PageHero
      title="Projects"
      description="Exploring the intersection of technology and creativity through full-stack development, automation engineering, and AI-driven solutions."
      eager={true}
    />

    <!-- Breadcrumb (Hidden visually, visible to search engines) -->
    <Breadcrumb items={breadcrumbItems} class="sr-only" />

    <section class="px-4 sm:px-6 lg:px-8">
      <div class="max-w-7xl mx-auto">
        
        <!-- Featured Projects Section - Responsive Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 md:gap-8" data-testid="projects-grid">
          {featuredProjects.map((project, idx) => (
            <ProjectCard project={project} index={idx} />
          ))}
        </div>
        
        <!-- No Projects State -->
        {featuredProjects.length === 0 && (
          <Card className="glass-card glass-card-accent border-primary/20 backdrop-blur-md">
            <CardContent className="text-center py-16">
              <div class="space-y-4">
                <div class="w-16 h-16 mx-auto bg-primary/10 rounded-full flex items-center justify-center">
                  <svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                </div>
                <CardTitle className="text-xl text-matrix-white/80">No featured projects available</CardTitle>
                <CardDescription className="text-matrix-white/60">
                  Check back soon for new case studies and project showcases!
                </CardDescription>
              </div>
            </CardContent>
          </Card>
        )}

      </div>
    </section>
  </section>
</MainLayout>