[["Map",1,2,9,10,97,98,202,203],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.12.8","content-config-digest","6c1e29f5e29af8eb","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://vpoliteiadis.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,42,43,70,71],"ai-assisted-creativity",{"id":11,"data":13,"body":38,"filePath":39,"digest":40,"legacyId":41,"deferredRender":26},{"title":14,"description":15,"excerpt":16,"coverImage":17,"author":18,"tags":19,"category":25,"featured":26,"publishedAt":27,"readingTime":28,"draft":29,"seo":30},"The Future of AI-Assisted Creativity","Exploring how artificial intelligence is transforming creative workflows and what this means for artists, designers, and developers.","How AI tools like Midjourney and Kling AI are revolutionizing creative processes and enabling new forms of artistic expression.","/images/blog/ai-creativity-cover.jpg","Vasileios Politeiadis",[20,21,22,23,24],"AI","Creativity","Technology","Midjourney","Digital Art","ai",true,"2024-12-15","8 min read",false,{"title":31,"description":32,"keywords":33},"The Future of AI-Assisted Creativity - Vasileios Politeiadis","Discover how AI is transforming creative workflows and enabling new forms of artistic expression in this comprehensive guide.",[34,23,35,36,37],"AI creativity","digital art","AI tools","creative workflow","# The Future of AI-Assisted Creativity\n\nThe intersection of artificial intelligence and human creativity is one of the most fascinating developments in recent years. As someone who balances technical engineering with creative pursuits, I've witnessed firsthand how AI tools are transforming not just the creative process, but our very understanding of what it means to be creative.\n\n## The Evolution of Creative Tools\n\nTraditional creative workflows have always been limited by technical skill, time, and resources. Learning to paint, compose music, or design requires years of practice and dedication. But AI is democratizing creativity in unprecedented ways.\n\n### From Manual to Assisted Creation\n\nConsider the journey from traditional painting to digital art:\n\n```typescript\n// Traditional workflow\nconst traditionalProcess = {\n  skill: 'Years of practice required',\n  materials: 'Expensive supplies',\n  time: 'Weeks to months per piece',\n  accessibility: 'Limited to skilled artists',\n};\n\n// AI-assisted workflow\nconst aiProcess = {\n  skill: 'Basic prompt engineering',\n  materials: 'Subscription to AI tools',\n  time: 'Minutes to hours per piece',\n  accessibility: 'Open to anyone with imagination',\n};\n```\n\n## My Experience with AI Art\n\nThrough my Instagram account [@arte.imaginari](https://instagram.com/arte.imaginari), I've explored various AI tools and their creative potential. Here's what I've learned:\n\n### Midjourney: The Game Changer\n\nMidjourney has been revolutionary for my creative process. The ability to iterate quickly and explore concepts that would take weeks to sketch manually has opened new creative possibilities.\n\n**Key Advantages:**\n\n- Rapid prototyping and iteration\n- Exploration of impossible concepts\n- Consistent style development\n- Commercial viability\n\n### The Creative Process\n\nHere's my typical workflow when creating AI-assisted art:\n\n1. **Concept Development**: Start with a clear vision or emotion\n2. **Prompt Engineering**: Craft detailed, specific prompts\n3. **Iteration**: Generate multiple variations\n4. **Refinement**: Use inpainting and outpainting\n5. **Post-Processing**: Apply traditional editing techniques\n\n## Technical Integration\n\nAs a developer, I'm particularly interested in how AI tools can be integrated into existing workflows. Here's a simple example of how you might integrate AI image generation into a web application:\n\n```javascript\n// Example: AI-powered design system\nclass AIDesignSystem {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseUrl = 'https://api.midjourney.com/v1';\n  }\n\n  async generateDesign(prompt, style = 'cyberpunk') {\n    const response = await fetch(`${this.baseUrl}/imagine`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${this.apiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        prompt: `${prompt} --style ${style}`,\n        aspect_ratio: '16:9',\n        quality: 'high',\n      }),\n    });\n\n    return await response.json();\n  }\n\n  async createVariation(imageId, variation = 1) {\n    // Generate variations of existing images\n    const response = await fetch(`${this.baseUrl}/variation`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${this.apiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        image_id: imageId,\n        variation: variation,\n      }),\n    });\n\n    return await response.json();\n  }\n}\n```\n\n## The Human Element\n\nDespite the power of AI tools, the human element remains crucial. AI is a collaborator, not a replacement. The most successful AI-assisted creators understand:\n\n- **Vision**: Having a clear creative direction\n- **Curiosity**: Exploring new techniques and tools\n- **Iteration**: Being willing to refine and improve\n- **Authenticity**: Maintaining your unique voice\n\n## Commercial Applications\n\nAI-assisted creativity isn't just for hobbyists. I've successfully used these tools for:\n\n- **Album Covers**: Creating unique artwork for local musicians\n- **Event Posters**: Designing promotional materials for techno parties\n- **Fashion Design**: Developing silk scarf patterns for fashion brands\n\nThe commercial viability of AI art is growing rapidly, creating new opportunities for creative professionals.\n\n## Ethical Considerations\n\nAs AI tools become more sophisticated, we need to consider:\n\n- **Copyright**: Who owns AI-generated content?\n- **Attribution**: How do we credit AI tools and human creators?\n- **Authenticity**: What makes art \"authentic\" in the AI age?\n- **Accessibility**: Ensuring these tools remain available to diverse creators\n\n## Looking Forward\n\nThe future of AI-assisted creativity is incredibly promising. We're moving toward:\n\n- **Real-time Collaboration**: AI tools that respond to human input instantly\n- **Cross-medium Integration**: Seamless movement between text, image, and video\n- **Personalized AI**: Tools that learn and adapt to individual creative styles\n- **Democratized Creation**: Making professional-quality art accessible to everyone\n\n## Conclusion\n\nAI-assisted creativity represents a fundamental shift in how we approach artistic expression. Rather than replacing human creativity, these tools amplify it, enabling us to explore ideas and concepts that were previously impossible or impractical.\n\nThe key is to approach AI as a collaboratorâ€”a powerful tool that enhances rather than replaces human imagination. As we continue to develop these technologies, the line between human and AI creativity will blur, creating new forms of artistic expression that we're only beginning to imagine.\n\n---\n\n_What are your thoughts on AI-assisted creativity? Have you experimented with these tools? I'd love to hear about your experiences and insights in the comments below._\n\n**Tags:** #AI #Creativity #DigitalArt #Midjourney #Technology #Innovation","src/content/blog/ai-assisted-creativity.mdx","aa78b09d5e54daeb","ai-assisted-creativity.mdx","casa-capoeira-journey",{"id":42,"data":44,"body":66,"filePath":67,"digest":68,"legacyId":69,"deferredRender":26},{"title":45,"description":46,"excerpt":47,"coverImage":48,"author":18,"tags":49,"category":56,"featured":29,"publishedAt":57,"readingTime":58,"draft":29,"seo":59},"Building Casa Capoeira: A Complete Product Journey","From ideation to deployment: the complete story of building a CMS platform for capoeira communities.","Discover the full product lifecycle of Casa Capoeira - from initial concept to live deployment, including technical challenges, design decisions, and lessons learned.","/images/blog/casa-capoeira-cover.jpg",[50,51,52,53,54,55],"Next.js","Supabase","Product","Full-Stack","CMS","Capoeira","development","2024-10-15","10 min read",{"title":60,"description":61,"keywords":62},"Building Casa Capoeira: A Complete Product Journey - Vasileios Politeiadis","Follow the complete product development journey of Casa Capoeira, a CMS platform for capoeira communities built with Next.js and Supabase.",[50,51,63,54,64,65],"product development","capoeira","full-stack","# Building Casa Capoeira: A Complete Product Journey\n\nBuilding a product from scratch is one of the most rewarding experiences in software development. Casa Capoeira represents my journey through the complete product lifecycle - from initial ideation to live deployment. This post chronicles the technical decisions, challenges, and lessons learned along the way.\n\n## The Genesis: Identifying the Problem\n\nThe idea for Casa Capoeira emerged from observing how capoeira communities manage their digital presence. Most groups rely on scattered solutions:\n\n- **Social media** for announcements\n- **WhatsApp groups** for communication\n- **Basic websites** for static information\n- **Manual processes** for event management\n\nThis fragmentation creates several problems:\n\n- Information gets lost across platforms\n- Event coordination becomes chaotic\n- New members struggle to find relevant information\n- Community leaders spend excessive time on administrative tasks\n\n### The Vision\n\nCasa Capoeira would be a unified platform that:\n\n- Centralizes all community information\n- Streamlines event management\n- Facilitates member communication\n- Provides tools for community growth\n\n## Technical Architecture Decisions\n\n### Frontend: Next.js 14 with App Router\n\n```typescript\n// Example of the app structure\napp/\nâ”œâ”€â”€ (auth)/\nâ”‚   â”œâ”€â”€ login/\nâ”‚   â””â”€â”€ register/\nâ”œâ”€â”€ (dashboard)/\nâ”‚   â”œâ”€â”€ events/\nâ”‚   â”œâ”€â”€ members/\nâ”‚   â””â”€â”€ announcements/\nâ”œâ”€â”€ api/\nâ”‚   â”œâ”€â”€ auth/\nâ”‚   â”œâ”€â”€ events/\nâ”‚   â””â”€â”€ members/\nâ””â”€â”€ globals.css\n```\n\n**Why Next.js 14?**\n\n- **Server Components**: Better performance and SEO\n- **App Router**: Simplified routing and layouts\n- **TypeScript**: Type safety throughout the application\n- **Built-in optimizations**: Image optimization, code splitting\n\n### Backend: Supabase\n\n```typescript\n// Database schema example\ninterface Event {\n  id: string;\n  title: string;\n  description: string;\n  start_date: Date;\n  end_date: Date;\n  location: string;\n  max_participants?: number;\n  created_by: string;\n  community_id: string;\n  status: 'draft' | 'published' | 'cancelled';\n}\n\ninterface Member {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  belt_level: 'beginner' | 'intermediate' | 'advanced';\n  join_date: Date;\n  community_id: string;\n  profile_image?: string;\n}\n```\n\n**Why Supabase?**\n\n- **Real-time subscriptions**: Live updates for events and announcements\n- **Row Level Security**: Granular access control\n- **Built-in authentication**: User management out of the box\n- **Database functions**: Complex queries and business logic\n- **Edge functions**: Serverless API endpoints\n\n### State Management: Zustand\n\n```typescript\n// Example store for events\ninterface EventStore {\n  events: Event[];\n  loading: boolean;\n  error: string | null;\n  fetchEvents: (communityId: string) => Promise\u003Cvoid>;\n  createEvent: (event: Omit\u003CEvent, 'id'>) => Promise\u003Cvoid>;\n  updateEvent: (id: string, updates: Partial\u003CEvent>) => Promise\u003Cvoid>;\n}\n\nconst useEventStore = create\u003CEventStore>((set, get) => ({\n  events: [],\n  loading: false,\n  error: null,\n\n  fetchEvents: async (communityId: string) => {\n    set({ loading: true, error: null });\n    try {\n      const { data, error } = await supabase\n        .from('events')\n        .select('*')\n        .eq('community_id', communityId)\n        .order('start_date', { ascending: true });\n\n      if (error) throw error;\n      set({ events: data, loading: false });\n    } catch (error) {\n      set({ error: error.message, loading: false });\n    }\n  },\n\n  // ... other methods\n}));\n```\n\n## Development Phases\n\n### Phase 1: Core Infrastructure (Weeks 1-2)\n\n**Database Design**\n\n```sql\n-- Core tables\nCREATE TABLE communities (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  name VARCHAR(255) NOT NULL,\n  description TEXT,\n  logo_url TEXT,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\nCREATE TABLE members (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  email VARCHAR(255) UNIQUE NOT NULL,\n  first_name VARCHAR(100) NOT NULL,\n  last_name VARCHAR(100) NOT NULL,\n  belt_level VARCHAR(50) DEFAULT 'beginner',\n  community_id UUID REFERENCES communities(id),\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\nCREATE TABLE events (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  title VARCHAR(255) NOT NULL,\n  description TEXT,\n  start_date TIMESTAMP WITH TIME ZONE NOT NULL,\n  end_date TIMESTAMP WITH TIME ZONE,\n  location TEXT,\n  max_participants INTEGER,\n  community_id UUID REFERENCES communities(id),\n  created_by UUID REFERENCES members(id),\n  status VARCHAR(50) DEFAULT 'draft',\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n```\n\n**Authentication Setup**\n\n```typescript\n// Supabase auth configuration\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\n// Auth context\nconst AuthContext = createContext\u003C{\n  user: User | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise\u003Cvoid>;\n  signUp: (email: string, password: string, userData: any) => Promise\u003Cvoid>;\n  signOut: () => Promise\u003Cvoid>;\n}>({} as any);\n```\n\n### Phase 2: Core Features (Weeks 3-6)\n\n**Event Management System**\n\n```typescript\n// Event creation component\nconst CreateEventForm = () => {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    startDate: '',\n    endDate: '',\n    location: '',\n    maxParticipants: ''\n  });\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    const { data, error } = await supabase\n      .from('events')\n      .insert([{\n        ...formData,\n        community_id: currentCommunity.id,\n        created_by: user.id,\n        status: 'published'\n      }])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating event:', error);\n      return;\n    }\n\n    // Update store and redirect\n    useEventStore.getState().createEvent(data);\n    router.push(`/events/${data.id}`);\n  };\n\n  return (\n    \u003Cform onSubmit={handleSubmit} className=\"space-y-6\">\n      {/* Form fields */}\n    \u003C/form>\n  );\n};\n```\n\n**Real-time Updates**\n\n```typescript\n// Real-time event updates\nuseEffect(() => {\n  const channel = supabase\n    .channel('events')\n    .on(\n      'postgres_changes',\n      {\n        event: '*',\n        schema: 'public',\n        table: 'events',\n        filter: `community_id=eq.${communityId}`,\n      },\n      payload => {\n        if (payload.eventType === 'INSERT') {\n          setEvents(prev => [...prev, payload.new as Event]);\n        } else if (payload.eventType === 'UPDATE') {\n          setEvents(prev =>\n            prev.map(event =>\n              event.id === payload.new.id ? (payload.new as Event) : event\n            )\n          );\n        } else if (payload.eventType === 'DELETE') {\n          setEvents(prev => prev.filter(event => event.id !== payload.old.id));\n        }\n      }\n    )\n    .subscribe();\n\n  return () => {\n    supabase.removeChannel(channel);\n  };\n}, [communityId]);\n```\n\n### Phase 3: Advanced Features (Weeks 7-10)\n\n**File Upload System**\n\n```typescript\n// Image upload component\nconst ImageUpload = ({ onUpload }: { onUpload: (url: string) => void }) => {\n  const [uploading, setUploading] = useState(false);\n\n  const handleUpload = async (file: File) => {\n    setUploading(true);\n\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${Math.random()}.${fileExt}`;\n    const filePath = `uploads/${fileName}`;\n\n    const { error: uploadError } = await supabase.storage\n      .from('images')\n      .upload(filePath, file);\n\n    if (uploadError) {\n      console.error('Upload error:', uploadError);\n      return;\n    }\n\n    const { data: { publicUrl } } = supabase.storage\n      .from('images')\n      .getPublicUrl(filePath);\n\n    onUpload(publicUrl);\n    setUploading(false);\n  };\n\n  return (\n    \u003Cdiv className=\"border-2 border-dashed border-gray-300 rounded-lg p-6\">\n      \u003Cinput\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => e.target.files?.[0] && handleUpload(e.target.files[0])}\n        disabled={uploading}\n      />\n      {uploading && \u003Cp>Uploading...\u003C/p>}\n    \u003C/div>\n  );\n};\n```\n\n**Search and Filtering**\n\n```typescript\n// Search functionality\nconst useEventSearch = (events: Event[]) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState({\n    status: 'all',\n    dateRange: 'all',\n  });\n\n  const filteredEvents = useMemo(() => {\n    return events.filter(event => {\n      const matchesSearch =\n        event.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        event.description.toLowerCase().includes(searchTerm.toLowerCase());\n\n      const matchesStatus =\n        filters.status === 'all' || event.status === filters.status;\n\n      const matchesDate =\n        filters.dateRange === 'all' ||\n        (filters.dateRange === 'upcoming' &&\n          new Date(event.start_date) > new Date()) ||\n        (filters.dateRange === 'past' &&\n          new Date(event.start_date) \u003C new Date());\n\n      return matchesSearch && matchesStatus && matchesDate;\n    });\n  }, [events, searchTerm, filters]);\n\n  return { filteredEvents, searchTerm, setSearchTerm, filters, setFilters };\n};\n```\n\n## Challenges and Solutions\n\n### Challenge 1: Real-time Data Synchronization\n\n**Problem**: Multiple users editing the same event simultaneously could cause conflicts.\n\n**Solution**: Implemented optimistic updates with conflict resolution:\n\n```typescript\nconst updateEvent = async (id: string, updates: Partial\u003CEvent>) => {\n  // Optimistic update\n  const previousEvents = useEventStore.getState().events;\n  const optimisticEvents = previousEvents.map(event =>\n    event.id === id ? { ...event, ...updates } : event\n  );\n  useEventStore.setState({ events: optimisticEvents });\n\n  try {\n    const { data, error } = await supabase\n      .from('events')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) throw error;\n\n    // Update with server response\n    useEventStore.setState({\n      events: previousEvents.map(event => (event.id === id ? data : event)),\n    });\n  } catch (error) {\n    // Revert on error\n    useEventStore.setState({ events: previousEvents });\n    console.error('Update failed:', error);\n  }\n};\n```\n\n### Challenge 2: Mobile Responsiveness\n\n**Problem**: Complex event management interface needed to work seamlessly on mobile devices.\n\n**Solution**: Implemented responsive design with mobile-first approach:\n\n```typescript\n// Responsive event card component\nconst EventCard = ({ event }: { event: Event }) => {\n  return (\n    \u003Cdiv className=\"bg-white rounded-lg shadow-md p-4 md:p-6\">\n      \u003Cdiv className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n        \u003Cdiv className=\"flex-1\">\n          \u003Ch3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n            {event.title}\n          \u003C/h3>\n          \u003Cp className=\"text-gray-600 text-sm mb-2\">\n            {formatDate(event.start_date)}\n          \u003C/p>\n          \u003Cp className=\"text-gray-700 text-sm line-clamp-2\">\n            {event.description}\n          \u003C/p>\n        \u003C/div>\n\n        \u003Cdiv className=\"mt-4 md:mt-0 md:ml-4 flex flex-col sm:flex-row gap-2\">\n          \u003Cbutton className=\"btn-primary text-sm\">\n            View Details\n          \u003C/button>\n          \u003Cbutton className=\"btn-secondary text-sm\">\n            RSVP\n          \u003C/button>\n        \u003C/div>\n      \u003C/div>\n    \u003C/div>\n  );\n};\n```\n\n### Challenge 3: Performance Optimization\n\n**Problem**: Large event lists were causing performance issues.\n\n**Solution**: Implemented virtualization and pagination:\n\n```typescript\n// Virtualized event list\nimport { FixedSizeList as List } from 'react-window';\n\nconst EventList = ({ events }: { events: Event[] }) => {\n  const Row = ({ index, style }: { index: number; style: CSSProperties }) => (\n    \u003Cdiv style={style}>\n      \u003CEventCard event={events[index]} />\n    \u003C/div>\n  );\n\n  return (\n    \u003CList\n      height={600}\n      itemCount={events.length}\n      itemSize={120}\n      width=\"100%\"\n    >\n      {Row}\n    \u003C/List>\n  );\n};\n```\n\n## Deployment and DevOps\n\n### Environment Setup\n\n```yaml\n# docker-compose.yml for local development\nversion: '3.8'\nservices:\n  app:\n    build: .\n    ports:\n      - '3000:3000'\n    environment:\n      - DATABASE_URL=${DATABASE_URL}\n      - SUPABASE_URL=${SUPABASE_URL}\n      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}\n    volumes:\n      - .:/app\n      - /app/node_modules\n```\n\n### CI/CD Pipeline\n\n```yaml\n# .github/workflows/deploy.yml\nname: Deploy to Production\n\non:\n  push:\n    branches: [main]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: '18'\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run tests\n        run: npm test\n\n      - name: Build application\n        run: npm run build\n        env:\n          DATABASE_URL: ${{ secrets.DATABASE_URL }}\n          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}\n\n      - name: Deploy to Vercel\n        uses: amondnet/vercel-action@v25\n        with:\n          vercel-token: ${{ secrets.VERCEL_TOKEN }}\n          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}\n          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}\n          vercel-args: '--prod'\n```\n\n## Key Learnings\n\n### 1. Start Simple, Iterate Fast\n\nThe initial version focused on core functionality (events and members). Advanced features like file uploads and real-time notifications were added incrementally based on user feedback.\n\n### 2. Database Design is Critical\n\nSpending time on proper database schema design paid dividends. The initial structure supported all planned features without major migrations.\n\n### 3. User Experience Trumps Technical Elegance\n\nSome technically \"perfect\" solutions were replaced with simpler alternatives that provided better user experience. For example, real-time updates were simplified to avoid complexity.\n\n### 4. Testing is Essential\n\nImplementing comprehensive testing from the start prevented numerous bugs and made refactoring much safer.\n\n```typescript\n// Example test\ndescribe('Event Management', () => {\n  it('should create a new event', async () => {\n    const eventData = {\n      title: 'Test Event',\n      description: 'Test Description',\n      startDate: new Date().toISOString(),\n      location: 'Test Location',\n    };\n\n    const { data, error } = await supabase\n      .from('events')\n      .insert([eventData])\n      .select()\n      .single();\n\n    expect(error).toBeNull();\n    expect(data.title).toBe(eventData.title);\n  });\n});\n```\n\n## Current Status and Future Plans\n\nCasa Capoeira is currently in beta with a small group of capoeira communities. The feedback has been overwhelmingly positive, with users particularly appreciating:\n\n- **Centralized information management**\n- **Easy event coordination**\n- **Mobile-friendly interface**\n- **Real-time updates**\n\n### Planned Features\n\n1. **Advanced Analytics**: Community growth metrics and engagement tracking\n2. **Payment Integration**: Event registration with payment processing\n3. **Multi-language Support**: International capoeira community support\n4. **API Access**: Third-party integrations for existing tools\n\n## Conclusion\n\nBuilding Casa Capoeira has been an incredible learning experience. The journey from concept to live product reinforced the importance of:\n\n- **User-centered design**\n- **Iterative development**\n- **Technical simplicity**\n- **Comprehensive testing**\n- **Proper planning and architecture**\n\nThe project demonstrates how modern web technologies can solve real-world problems for niche communities. The combination of Next.js, Supabase, and thoughtful UX design created a powerful platform that genuinely improves how capoeira communities operate.\n\nFor developers considering building their own products, my advice is to start with a problem you understand deeply, build incrementally, and always prioritize user experience over technical perfection.\n\n---\n\n_What's your experience with building products from scratch? What challenges did you face, and how did you overcome them? Share your thoughts in the comments below!_\n\n**Tags:** #Next.js #Supabase #ProductDevelopment #FullStack #CMS #Capoeira #WebDevelopment","src/content/blog/casa-capoeira-journey.mdx","1086bef0d0170ea5","casa-capoeira-journey.mdx","playwright-testing-strategies",{"id":70,"data":72,"body":93,"filePath":94,"digest":95,"legacyId":96,"deferredRender":26},{"title":73,"description":74,"excerpt":75,"coverImage":76,"author":18,"tags":77,"category":84,"featured":29,"publishedAt":85,"readingTime":86,"draft":29,"seo":87},"Advanced Playwright Testing Strategies","Deep dive into advanced Playwright testing techniques for complex web applications and European Commission projects.","Learn advanced Playwright testing strategies, best practices, and real-world techniques from European Commission automation projects.","/images/blog/playwright-testing-cover.jpg",[78,79,80,81,82,83],"Playwright","Testing","Automation","QA","TypeScript","European Commission","automation","2024-11-20","12 min read",{"title":88,"description":89,"keywords":90},"Advanced Playwright Testing Strategies - Vasileios Politeiadis","Master advanced Playwright testing techniques with real-world examples from European Commission automation projects.",[78,91,84,81,82,92],"testing","web testing","# Advanced Playwright Testing Strategies\n\nAs a Senior QA Automation Engineer working on European Commission projects, I've had the opportunity to implement Playwright in some of the most complex web applications imaginable. This post shares the advanced strategies and techniques that have proven invaluable in real-world scenarios.\n\n## Why Playwright for Enterprise Applications?\n\nPlaywright has become my go-to tool for enterprise testing, especially for European Commission projects where reliability, performance, and cross-browser compatibility are non-negotiable.\n\n### Key Advantages for Enterprise\n\n```typescript\n// Playwright's enterprise advantages\nconst playwrightAdvantages = {\n  crossBrowser: 'Chromium, Firefox, WebKit support',\n  reliability: 'Auto-waiting and smart retry mechanisms',\n  performance: 'Parallel execution and resource optimization',\n  debugging: 'Trace viewer and video recording',\n  maintainability: 'TypeScript support and clean APIs',\n};\n```\n\n## Advanced Test Architecture\n\n### 1. Page Object Model with TypeScript\n\nHere's how I structure complex test suites for enterprise applications:\n\n```typescript\n// Base page object with common functionality\nabstract class BasePage {\n  protected page: Page;\n  protected baseUrl: string;\n\n  constructor(page: Page, baseUrl: string) {\n    this.page = page;\n    this.baseUrl = baseUrl;\n  }\n\n  // Common navigation method\n  async navigateTo(path: string): Promise\u003Cvoid> {\n    await this.page.goto(`${this.baseUrl}${path}`);\n    await this.waitForPageLoad();\n  }\n\n  // Smart wait for page load\n  private async waitForPageLoad(): Promise\u003Cvoid> {\n    await this.page.waitForLoadState('networkidle');\n    await this.page.waitForFunction(() => document.readyState === 'complete');\n  }\n\n  // Common assertion helper\n  protected async assertElementVisible(selector: string): Promise\u003Cvoid> {\n    await expect(this.page.locator(selector)).toBeVisible();\n  }\n}\n\n// Specific page object for login\nclass LoginPage extends BasePage {\n  private readonly emailInput = '[data-testid=\"email-input\"]';\n  private readonly passwordInput = '[data-testid=\"password-input\"]';\n  private readonly loginButton = '[data-testid=\"login-button\"]';\n  private readonly errorMessage = '[data-testid=\"error-message\"]';\n\n  async login(email: string, password: string): Promise\u003Cvoid> {\n    await this.page.fill(this.emailInput, email);\n    await this.page.fill(this.passwordInput, password);\n    await this.page.click(this.loginButton);\n  }\n\n  async assertLoginError(expectedMessage: string): Promise\u003Cvoid> {\n    await this.assertElementVisible(this.errorMessage);\n    await expect(this.page.locator(this.errorMessage)).toContainText(\n      expectedMessage\n    );\n  }\n}\n```\n\n### 2. Test Data Management\n\nFor European Commission projects, test data management is critical:\n\n```typescript\n// Test data factory with realistic data\nclass TestDataFactory {\n  static generateUserData(): UserData {\n    return {\n      email: `test.user.${Date.now()}@example.com`,\n      firstName: this.getRandomFirstName(),\n      lastName: this.getRandomLastName(),\n      organization: this.getRandomOrganization(),\n      role: this.getRandomRole(),\n    };\n  }\n\n  static generateCommissionData(): CommissionData {\n    return {\n      projectId: `EC-${Math.random().toString(36).substr(2, 9).toUpperCase()}`,\n      title: `Test Project ${Date.now()}`,\n      budget: Math.floor(Math.random() * 1000000) + 50000,\n      duration: Math.floor(Math.random() * 24) + 6,\n      priority: this.getRandomPriority(),\n    };\n  }\n\n  private static getRandomFirstName(): string {\n    const names = ['Maria', 'Giuseppe', 'Hans', 'Sophie', 'Pierre', 'Ana'];\n    return names[Math.floor(Math.random() * names.length)];\n  }\n\n  private static getRandomOrganization(): string {\n    const orgs = [\n      'European Commission',\n      'Member State Agency',\n      'Research Institute',\n    ];\n    return orgs[Math.floor(Math.random() * orgs.length)];\n  }\n}\n```\n\n## Advanced Testing Techniques\n\n### 1. Handling Dynamic Content\n\nEuropean Commission applications often have dynamic content that changes based on user roles and permissions:\n\n```typescript\n// Dynamic content testing strategy\nclass DynamicContentTester {\n  constructor(private page: Page) {}\n\n  async waitForDynamicContent(\n    selector: string,\n    timeout = 10000\n  ): Promise\u003Cvoid> {\n    await this.page.waitForFunction(\n      sel => {\n        const element = document.querySelector(sel);\n        return (\n          element && element.textContent && element.textContent.trim() !== ''\n        );\n      },\n      selector,\n      { timeout }\n    );\n  }\n\n  async assertContentBasedOnRole(role: string): Promise\u003Cvoid> {\n    const roleSelectors = {\n      admin: '[data-role=\"admin\"]',\n      user: '[data-role=\"user\"]',\n      viewer: '[data-role=\"viewer\"]',\n    };\n\n    const selector = roleSelectors[role as keyof typeof roleSelectors];\n    if (selector) {\n      await this.page.waitForSelector(selector);\n      await expect(this.page.locator(selector)).toBeVisible();\n    }\n  }\n}\n```\n\n### 2. API Testing Integration\n\nCombining UI and API testing for comprehensive coverage:\n\n```typescript\n// API testing integration\nclass APITestHelper {\n  private context: APIRequestContext;\n\n  constructor(context: APIRequestContext) {\n    this.context = context;\n  }\n\n  async createTestUser(userData: UserData): Promise\u003CAPIResponse> {\n    return await this.context.post('/api/users', {\n      data: userData,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${process.env.API_TOKEN}`,\n      },\n    });\n  }\n\n  async cleanupTestData(userId: string): Promise\u003Cvoid> {\n    await this.context.delete(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${process.env.API_TOKEN}`,\n      },\n    });\n  }\n}\n\n// Combined UI and API test\ntest('user registration flow', async ({ page, request }) => {\n  const apiHelper = new APITestHelper(request);\n  const userData = TestDataFactory.generateUserData();\n\n  // Create user via API\n  const response = await apiHelper.createTestUser(userData);\n  expect(response.status()).toBe(201);\n\n  // Verify UI reflects the creation\n  await page.goto('/users');\n  await page.waitForSelector(`[data-user-id=\"${userData.email}\"]`);\n  await expect(\n    page.locator(`[data-user-id=\"${userData.email}\"]`)\n  ).toBeVisible();\n\n  // Cleanup\n  await apiHelper.cleanupTestData(userData.email);\n});\n```\n\n### 3. Performance Testing\n\nFor enterprise applications, performance is critical:\n\n```typescript\n// Performance testing utilities\nclass PerformanceTester {\n  constructor(private page: Page) {}\n\n  async measurePageLoadTime(): Promise\u003Cnumber> {\n    const startTime = Date.now();\n\n    await this.page.waitForLoadState('networkidle');\n\n    const loadTime = Date.now() - startTime;\n    console.log(`Page load time: ${loadTime}ms`);\n\n    return loadTime;\n  }\n\n  async assertPerformanceThreshold(maxLoadTime: number): Promise\u003Cvoid> {\n    const loadTime = await this.measurePageLoadTime();\n    expect(loadTime).toBeLessThan(maxLoadTime);\n  }\n\n  async monitorNetworkRequests(): Promise\u003Cvoid> {\n    const requests: string[] = [];\n\n    this.page.on('request', request => {\n      requests.push(request.url());\n    });\n\n    await this.page.waitForLoadState('networkidle');\n\n    // Analyze requests for performance issues\n    const slowRequests = requests.filter(\n      url => url.includes('/api/') && !url.includes('/health')\n    );\n\n    console.log(`Network requests: ${requests.length}`);\n    console.log(`API calls: ${slowRequests.length}`);\n  }\n}\n```\n\n## Error Handling and Recovery\n\n### 1. Robust Error Handling\n\n```typescript\n// Advanced error handling for flaky tests\nclass RobustTestHelper {\n  constructor(private page: Page) {}\n\n  async clickWithRetry(selector: string, maxRetries = 3): Promise\u003Cvoid> {\n    for (let i = 0; i \u003C maxRetries; i++) {\n      try {\n        await this.page.click(selector);\n        return;\n      } catch (error) {\n        if (i === maxRetries - 1) throw error;\n        await this.page.waitForTimeout(1000);\n      }\n    }\n  }\n\n  async waitForElementWithTimeout(\n    selector: string,\n    timeout = 10000\n  ): Promise\u003Cvoid> {\n    try {\n      await this.page.waitForSelector(selector, { timeout });\n    } catch (error) {\n      // Take screenshot for debugging\n      await this.page.screenshot({ path: `error-${Date.now()}.png` });\n      throw error;\n    }\n  }\n}\n```\n\n### 2. Test Recovery Strategies\n\n```typescript\n// Test recovery and cleanup\nclass TestRecovery {\n  static async cleanupTestEnvironment(): Promise\u003Cvoid> {\n    // Clean up test data\n    // Reset application state\n    // Clear browser storage\n  }\n\n  static async handleTestFailure(page: Page, testName: string): Promise\u003Cvoid> {\n    // Take screenshot\n    await page.screenshot({\n      path: `failure-${testName}-${Date.now()}.png`,\n      fullPage: true,\n    });\n\n    // Save page HTML for debugging\n    const html = await page.content();\n    require('fs').writeFileSync(`failure-${testName}-${Date.now()}.html`, html);\n  }\n}\n```\n\n## Configuration Management\n\n### 1. Environment-Specific Configurations\n\n```typescript\n// Configuration management for different environments\ninterface TestConfig {\n  baseUrl: string;\n  timeout: number;\n  retries: number;\n  headless: boolean;\n  slowMo: number;\n}\n\nclass ConfigManager {\n  static getConfig(environment: string): TestConfig {\n    const configs = {\n      local: {\n        baseUrl: 'http://localhost:3000',\n        timeout: 30000,\n        retries: 2,\n        headless: false,\n        slowMo: 1000,\n      },\n      staging: {\n        baseUrl: 'https://staging.ec-project.eu',\n        timeout: 60000,\n        retries: 3,\n        headless: true,\n        slowMo: 0,\n      },\n      production: {\n        baseUrl: 'https://ec-project.eu',\n        timeout: 90000,\n        retries: 1,\n        headless: true,\n        slowMo: 0,\n      },\n    };\n\n    return configs[environment as keyof typeof configs] || configs.local;\n  }\n}\n```\n\n## Best Practices from European Commission Projects\n\n### 1. Security Testing\n\n```typescript\n// Security testing utilities\nclass SecurityTester {\n  constructor(private page: Page) {}\n\n  async testXSSVulnerability(\n    inputSelector: string,\n    payload: string\n  ): Promise\u003Cvoid> {\n    await this.page.fill(inputSelector, payload);\n    await this.page.click('[type=\"submit\"]');\n\n    // Check if payload was executed\n    const alertHandled = await this.page.evaluate(() => {\n      return new Promise(resolve => {\n        window.alert = () => resolve(true);\n        setTimeout(() => resolve(false), 1000);\n      });\n    });\n\n    expect(alertHandled).toBe(false);\n  }\n\n  async testCSRFProtection(): Promise\u003Cvoid> {\n    // Test CSRF token validation\n    const response = await this.page.request.post('/api/data', {\n      data: { test: 'data' },\n      headers: { 'X-CSRF-Token': 'invalid-token' },\n    });\n\n    expect(response.status()).toBe(403);\n  }\n}\n```\n\n### 2. Accessibility Testing\n\n```typescript\n// Accessibility testing with Playwright\nclass AccessibilityTester {\n  constructor(private page: Page) {}\n\n  async testKeyboardNavigation(): Promise\u003Cvoid> {\n    // Test tab navigation\n    await this.page.keyboard.press('Tab');\n    await expect(this.page.locator(':focus')).toBeVisible();\n\n    // Test enter key functionality\n    await this.page.keyboard.press('Enter');\n    // Verify expected action occurred\n  }\n\n  async testScreenReaderCompatibility(): Promise\u003Cvoid> {\n    // Test ARIA labels\n    const elementsWithAria = await this.page.locator('[aria-label]').count();\n    expect(elementsWithAria).toBeGreaterThan(0);\n\n    // Test alt text for images\n    const imagesWithoutAlt = await this.page.locator('img:not([alt])').count();\n    expect(imagesWithoutAlt).toBe(0);\n  }\n}\n```\n\n## Conclusion\n\nAdvanced Playwright testing requires a combination of technical expertise, strategic thinking, and practical experience. The strategies outlined above have been proven effective in complex enterprise environments, particularly in European Commission projects where reliability and compliance are paramount.\n\nKey takeaways:\n\n- **Architecture matters**: Use Page Object Model and proper TypeScript typing\n- **Data management**: Implement robust test data factories\n- **Error handling**: Build resilience into your test suite\n- **Performance**: Monitor and optimize test execution\n- **Security**: Include security testing in your automation\n- **Accessibility**: Ensure your applications work for all users\n\nRemember, the goal is not just to automate testing, but to create a reliable, maintainable, and scalable testing framework that supports continuous delivery and quality assurance.\n\n---\n\n_What advanced Playwright techniques have you found most valuable in your projects? Share your experiences in the comments below!_\n\n**Tags:** #Playwright #Testing #Automation #QA #TypeScript #EuropeanCommission #WebTesting","src/content/blog/playwright-testing-strategies.mdx","9f4f4082d39238e0","playwright-testing-strategies.mdx","creative",["Map",99,100,156,157],"neon-dreams-video",{"id":99,"data":101,"body":126,"filePath":127,"digest":128,"rendered":129,"legacyId":155},{"title":102,"description":103,"excerpt":104,"mediaType":105,"coverImage":106,"coverVideo":107,"tools":108,"tags":113,"category":114,"featured":29,"publishedAt":119,"updatedAt":120,"instagramUrl":121,"aspectRatio":122,"dimensions":123,"prompt":124,"process":125},"Neon Dreams - Video Experiment","An experimental AI-generated video exploring dreamlike neon landscapes and abstract digital environments, pushing the boundaries of AI video generation.","AI-generated video exploring neon dreamscapes and abstract digital environments","video","/images/creative/neon-dreams-cover.jpg","/videos/creative/neon-dreams-experiment.mp4",[109,110,111,112],"Kling AI","Runway ML","After Effects","DaVinci Resolve",[105,114,115,116,117,118],"experiment","neon","abstract","dreamlike","ai-generation","2024-02-10","2024-02-15","https://instagram.com/p/example-neon-dreams-video","16/9","1920x1080","A dreamlike neon landscape with flowing digital particles, abstract geometric shapes floating in a dark void, soft neon glows in cyan and magenta, ethereal atmosphere, smooth camera movement, 60fps","This experimental video began with Kling AI for initial video generation, exploring abstract neon landscapes. The raw AI output was then enhanced in Runway ML for additional effects and smooth transitions. Final color grading and timing adjustments were made in DaVinci Resolve, with some particle effects added in After Effects for enhanced visual impact.","# Neon Dreams - Video Experiment\n\nThis experimental video piece explores the potential of AI video generation to create dreamlike, abstract environments that blur the line between digital art and cinematic experience.\n\n## Creative Process\n\nThe creation of this video involved multiple AI tools and post-processing techniques:\n\n1. **Initial Generation**: Used Kling AI to generate the base video with abstract neon landscapes\n2. **Enhancement**: Applied additional effects and transitions in Runway ML\n3. **Color Grading**: Fine-tuned the neon color palette in DaVinci Resolve\n4. **Particle Effects**: Added subtle digital particles in After Effects\n5. **Final Assembly**: Combined all elements for the final 60fps output\n\n## Technical Specifications\n\n- **Resolution**: 1920x1080 (Full HD)\n- **Frame Rate**: 60fps for smooth motion\n- **Duration**: 15 seconds (looping)\n- **Color Space**: Rec.709 with HDR highlights\n- **Codec**: H.264 for web compatibility\n\n## Artistic Vision\n\nThis piece represents an exploration of how AI can generate not just static images, but moving, breathing digital environments. The neon aesthetic creates a sense of otherworldly beauty, while the abstract nature allows viewers to project their own interpretations onto the flowing forms.\n\nThe dreamlike quality suggests a future where AI-generated content can evoke emotional responses similar to traditional art forms, opening new possibilities for creative expression in the digital age.\n\n## Experimental Techniques\n\n- **AI Video Generation**: Pushing the limits of current AI video tools\n- **Multi-Tool Workflow**: Combining different AI platforms for enhanced results\n- **Post-Processing**: Traditional video editing techniques applied to AI-generated content\n- **Loop Design**: Creating seamless loops for continuous viewing experience\n\nThis experiment demonstrates the potential for AI to create not just individual images, but entire visual experiences that can transport viewers to imagined digital realms.","src/content/creative/neon-dreams-video.md","03216b06b274340f",{"html":130,"metadata":131},"\u003Ch1 id=\"neon-dreams---video-experiment\">Neon Dreams - Video Experiment\u003C/h1>\n\u003Cp>This experimental video piece explores the potential of AI video generation to create dreamlike, abstract environments that blur the line between digital art and cinematic experience.\u003C/p>\n\u003Ch2 id=\"creative-process\">Creative Process\u003C/h2>\n\u003Cp>The creation of this video involved multiple AI tools and post-processing techniques:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Initial Generation\u003C/strong>: Used Kling AI to generate the base video with abstract neon landscapes\u003C/li>\n\u003Cli>\u003Cstrong>Enhancement\u003C/strong>: Applied additional effects and transitions in Runway ML\u003C/li>\n\u003Cli>\u003Cstrong>Color Grading\u003C/strong>: Fine-tuned the neon color palette in DaVinci Resolve\u003C/li>\n\u003Cli>\u003Cstrong>Particle Effects\u003C/strong>: Added subtle digital particles in After Effects\u003C/li>\n\u003Cli>\u003Cstrong>Final Assembly\u003C/strong>: Combined all elements for the final 60fps output\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"technical-specifications\">Technical Specifications\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Resolution\u003C/strong>: 1920x1080 (Full HD)\u003C/li>\n\u003Cli>\u003Cstrong>Frame Rate\u003C/strong>: 60fps for smooth motion\u003C/li>\n\u003Cli>\u003Cstrong>Duration\u003C/strong>: 15 seconds (looping)\u003C/li>\n\u003Cli>\u003Cstrong>Color Space\u003C/strong>: Rec.709 with HDR highlights\u003C/li>\n\u003Cli>\u003Cstrong>Codec\u003C/strong>: H.264 for web compatibility\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"artistic-vision\">Artistic Vision\u003C/h2>\n\u003Cp>This piece represents an exploration of how AI can generate not just static images, but moving, breathing digital environments. The neon aesthetic creates a sense of otherworldly beauty, while the abstract nature allows viewers to project their own interpretations onto the flowing forms.\u003C/p>\n\u003Cp>The dreamlike quality suggests a future where AI-generated content can evoke emotional responses similar to traditional art forms, opening new possibilities for creative expression in the digital age.\u003C/p>\n\u003Ch2 id=\"experimental-techniques\">Experimental Techniques\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>AI Video Generation\u003C/strong>: Pushing the limits of current AI video tools\u003C/li>\n\u003Cli>\u003Cstrong>Multi-Tool Workflow\u003C/strong>: Combining different AI platforms for enhanced results\u003C/li>\n\u003Cli>\u003Cstrong>Post-Processing\u003C/strong>: Traditional video editing techniques applied to AI-generated content\u003C/li>\n\u003Cli>\u003Cstrong>Loop Design\u003C/strong>: Creating seamless loops for continuous viewing experience\u003C/li>\n\u003C/ul>\n\u003Cp>This experiment demonstrates the potential for AI to create not just individual images, but entire visual experiences that can transport viewers to imagined digital realms.\u003C/p>",{"headings":132,"localImagePaths":149,"remoteImagePaths":150,"frontmatter":151,"imagePaths":154},[133,136,140,143,146],{"depth":134,"slug":135,"text":102},1,"neon-dreams---video-experiment",{"depth":137,"slug":138,"text":139},2,"creative-process","Creative Process",{"depth":137,"slug":141,"text":142},"technical-specifications","Technical Specifications",{"depth":137,"slug":144,"text":145},"artistic-vision","Artistic Vision",{"depth":137,"slug":147,"text":148},"experimental-techniques","Experimental Techniques",[],[],{"title":102,"description":103,"excerpt":104,"mediaType":105,"coverImage":106,"coverVideo":107,"tools":152,"tags":153,"category":114,"featured":29,"publishedAt":119,"updatedAt":120,"aspectRatio":122,"dimensions":123,"prompt":124,"process":125,"instagramUrl":121},[109,110,111,112],[105,114,115,116,117,118],[],"neon-dreams-video.md","cyberpunk-portrait",{"id":156,"data":158,"body":179,"filePath":180,"digest":181,"rendered":182,"legacyId":201},{"title":159,"description":160,"excerpt":161,"mediaType":162,"coverImage":163,"tools":164,"tags":167,"category":172,"featured":26,"publishedAt":173,"updatedAt":174,"instagramUrl":175,"dimensions":176,"prompt":177,"process":178},"Cyberpunk Portrait #001","A futuristic portrait exploring the intersection of human identity and digital augmentation in a neon-lit cyberpunk aesthetic.","Futuristic portrait with digital augmentation and neon aesthetics","image","/images/creative/cyberpunk-portrait-001.jpg",[23,165,166],"Photoshop","Topaz Gigapixel",[168,169,115,170,171],"cyberpunk","portrait","futuristic","digital-art","ai-art","2024-01-15","2024-01-20","https://instagram.com/p/example-cyberpunk-portrait","2048x2048","A stunning cyberpunk portrait of a young woman with glowing neon blue eyes, digital circuit patterns on her skin, holographic hair, dramatic lighting with purple and cyan neon lights, highly detailed, cinematic composition, 8k resolution","This piece began with a Midjourney prompt exploring cyberpunk aesthetics. The initial AI generation was refined through multiple iterations, focusing on the balance between human features and digital augmentation. Post-processing in Photoshop enhanced the neon glow effects and added subtle circuit patterns. Topaz Gigapixel was used for final upscaling to ensure crisp detail in the final 2048x2048 output.","# Cyberpunk Portrait #001\n\nThis piece explores the evolving relationship between human identity and digital technology in a cyberpunk future. The subject's features are enhanced with subtle digital augmentations while maintaining their essential humanity.\n\n## Creative Process\n\nThe creation of this portrait involved a multi-stage process combining AI generation with traditional digital art techniques:\n\n1. **Initial Concept**: Started with a vision of how digital augmentation might enhance rather than replace human beauty\n2. **AI Generation**: Used Midjourney to explore various cyberpunk aesthetics and lighting scenarios\n3. **Refinement**: Multiple iterations focused on achieving the perfect balance of human and digital elements\n4. **Post-Processing**: Enhanced neon effects and added subtle circuit patterns in Photoshop\n5. **Final Polish**: Upscaled using Topaz Gigapixel for maximum detail\n\n## Technical Details\n\n- **Resolution**: 2048x2048 pixels\n- **Color Palette**: Neon blues, purples, and cyans against dark backgrounds\n- **Style**: Cinematic cyberpunk with dramatic lighting\n- **Tools Used**: Midjourney for generation, Photoshop for refinement, Topaz Gigapixel for upscaling\n\n## Artistic Intent\n\nThis portrait challenges the viewer to consider how technology might enhance human beauty and identity rather than diminish it. The subtle digital augmentations suggest a future where humans and technology coexist harmoniously, creating new forms of beauty and expression.\n\nThe neon lighting and circuit patterns serve as metaphors for the digital consciousness that might one day complement our biological minds, while the subject's expression conveys both strength and vulnerability in this imagined future.","src/content/creative/cyberpunk-portrait.md","51a61ee931f19795",{"html":183,"metadata":184},"\u003Ch1 id=\"cyberpunk-portrait-001\">Cyberpunk Portrait #001\u003C/h1>\n\u003Cp>This piece explores the evolving relationship between human identity and digital technology in a cyberpunk future. The subjectâ€™s features are enhanced with subtle digital augmentations while maintaining their essential humanity.\u003C/p>\n\u003Ch2 id=\"creative-process\">Creative Process\u003C/h2>\n\u003Cp>The creation of this portrait involved a multi-stage process combining AI generation with traditional digital art techniques:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Initial Concept\u003C/strong>: Started with a vision of how digital augmentation might enhance rather than replace human beauty\u003C/li>\n\u003Cli>\u003Cstrong>AI Generation\u003C/strong>: Used Midjourney to explore various cyberpunk aesthetics and lighting scenarios\u003C/li>\n\u003Cli>\u003Cstrong>Refinement\u003C/strong>: Multiple iterations focused on achieving the perfect balance of human and digital elements\u003C/li>\n\u003Cli>\u003Cstrong>Post-Processing\u003C/strong>: Enhanced neon effects and added subtle circuit patterns in Photoshop\u003C/li>\n\u003Cli>\u003Cstrong>Final Polish\u003C/strong>: Upscaled using Topaz Gigapixel for maximum detail\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"technical-details\">Technical Details\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Resolution\u003C/strong>: 2048x2048 pixels\u003C/li>\n\u003Cli>\u003Cstrong>Color Palette\u003C/strong>: Neon blues, purples, and cyans against dark backgrounds\u003C/li>\n\u003Cli>\u003Cstrong>Style\u003C/strong>: Cinematic cyberpunk with dramatic lighting\u003C/li>\n\u003Cli>\u003Cstrong>Tools Used\u003C/strong>: Midjourney for generation, Photoshop for refinement, Topaz Gigapixel for upscaling\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"artistic-intent\">Artistic Intent\u003C/h2>\n\u003Cp>This portrait challenges the viewer to consider how technology might enhance human beauty and identity rather than diminish it. The subtle digital augmentations suggest a future where humans and technology coexist harmoniously, creating new forms of beauty and expression.\u003C/p>\n\u003Cp>The neon lighting and circuit patterns serve as metaphors for the digital consciousness that might one day complement our biological minds, while the subjectâ€™s expression conveys both strength and vulnerability in this imagined future.\u003C/p>",{"headings":185,"localImagePaths":195,"remoteImagePaths":196,"frontmatter":197,"imagePaths":200},[186,188,189,192],{"depth":134,"slug":187,"text":159},"cyberpunk-portrait-001",{"depth":137,"slug":138,"text":139},{"depth":137,"slug":190,"text":191},"technical-details","Technical Details",{"depth":137,"slug":193,"text":194},"artistic-intent","Artistic Intent",[],[],{"title":159,"description":160,"excerpt":161,"mediaType":162,"coverImage":163,"tools":198,"tags":199,"category":172,"featured":26,"publishedAt":173,"updatedAt":174,"dimensions":176,"prompt":177,"process":178,"instagramUrl":175},[23,165,166],[168,169,115,170,171],[],"cyberpunk-portrait.md","projects",["Map",204,205,287,288],"casa-capoeira",{"id":204,"data":206,"body":247,"filePath":248,"digest":249,"rendered":250,"legacyId":286},{"title":207,"description":208,"excerpt":209,"coverImage":210,"coverVideo":211,"tags":212,"techStack":216,"featured":26,"publishedAt":173,"updatedAt":221,"client":222,"duration":223,"role":224,"team":225,"problem":226,"solution":227,"impact":228,"challenges":229,"learnings":234,"liveUrl":239,"githubUrl":240,"status":241,"featuredImage":242,"gallery":243},"Casa Capoeira","A comprehensive CMS platform for capoeira schools and academies, streamlining class management, student enrollment, and community engagement.","Modern CMS platform revolutionizing how capoeira schools manage their operations and engage with students.","/images/projects/casa-capoeira-cover.jpg","/videos/casa-capoeira-preview.mp4",[54,213,214,53,215],"Education","Community","SaaS",[50,217,218,51,219,82,220],"React","Node.js","TailwindCSS","Prisma","2024-03-20","Capoeira Community","6 months","Full-Stack Developer & Product Designer",[18],"Capoeira schools struggle with manual class scheduling, student management, and community engagement. Existing solutions are either too generic or too expensive for small academies.","Built a specialized CMS platform with intuitive class management, automated enrollment systems, and integrated community features. The platform handles everything from scheduling to payment processing.","Reduced administrative overhead by 70%, increased student retention by 40%, and enabled schools to focus on teaching rather than paperwork. Currently serving 15+ academies across Europe.",[230,231,232,233],"Complex scheduling logic for recurring classes","Multi-language support for international schools","Payment integration with European providers","Real-time notifications and updates",[235,236,237,238],"Importance of domain-specific UX design","Value of early user feedback in niche markets","Complexity of recurring event management","Benefits of TypeScript in large-scale applications","https://casa-capoeira-portal.vercel.app/en","https://github.com/bpolitiadis/casa-capoeira","completed","/images/projects/casa-capoeira-hero.jpg",[244,245,246],"/images/projects/casa-capoeira-dashboard.jpg","/images/projects/casa-capoeira-scheduling.jpg","/images/projects/casa-capoeira-mobile.jpg","# Casa Capoeira - Revolutionizing Capoeira School Management\n\n## The Challenge\n\nCapoeira schools across Europe face a common problem: managing their operations with generic tools that don't understand their unique needs. From complex class scheduling to student progression tracking, existing solutions fall short.\n\n## The Solution\n\nCasa Capoeira is a comprehensive CMS platform built specifically for capoeira academies. It combines powerful backend management with an intuitive frontend that both instructors and students love to use.\n\n### Key Features\n\n- **Smart Scheduling**: Automated class scheduling with instructor availability and capacity management\n- **Student Portal**: Personalized dashboards for progress tracking and class booking\n- **Payment Integration**: Seamless payment processing with European providers\n- **Community Hub**: Built-in social features for academy members\n- **Multi-language Support**: Available in Portuguese, English, and Spanish\n\n### Technical Architecture\n\nBuilt with modern technologies for scalability and performance:\n\n- **Frontend**: Next.js 14 with React 18 and TypeScript\n- **Backend**: Node.js with Express and Prisma ORM\n- **Database**: PostgreSQL via Supabase\n- **Styling**: TailwindCSS with custom design system\n- **Deployment**: Vercel with automated CI/CD\n\n## The Impact\n\nSince launch, Casa Capoeira has transformed how capoeira schools operate:\n\n- **70% reduction** in administrative overhead\n- **40% increase** in student retention\n- **15+ academies** actively using the platform\n- **1000+ students** managed through the system\n\n## Looking Forward\n\nThe platform continues to evolve based on user feedback, with plans for mobile apps, advanced analytics, and integration with capoeira federations worldwide.\n\n---\n\n_Casa Capoeira represents the perfect intersection of technical expertise and domain knowledge, creating a solution that truly serves the capoeira community._","src/content/projects/casa-capoeira.md","a7ec1c79a604fdf2",{"html":251,"metadata":252},"\u003Ch1 id=\"casa-capoeira---revolutionizing-capoeira-school-management\">Casa Capoeira - Revolutionizing Capoeira School Management\u003C/h1>\n\u003Ch2 id=\"the-challenge\">The Challenge\u003C/h2>\n\u003Cp>Capoeira schools across Europe face a common problem: managing their operations with generic tools that donâ€™t understand their unique needs. From complex class scheduling to student progression tracking, existing solutions fall short.\u003C/p>\n\u003Ch2 id=\"the-solution\">The Solution\u003C/h2>\n\u003Cp>Casa Capoeira is a comprehensive CMS platform built specifically for capoeira academies. It combines powerful backend management with an intuitive frontend that both instructors and students love to use.\u003C/p>\n\u003Ch3 id=\"key-features\">Key Features\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Smart Scheduling\u003C/strong>: Automated class scheduling with instructor availability and capacity management\u003C/li>\n\u003Cli>\u003Cstrong>Student Portal\u003C/strong>: Personalized dashboards for progress tracking and class booking\u003C/li>\n\u003Cli>\u003Cstrong>Payment Integration\u003C/strong>: Seamless payment processing with European providers\u003C/li>\n\u003Cli>\u003Cstrong>Community Hub\u003C/strong>: Built-in social features for academy members\u003C/li>\n\u003Cli>\u003Cstrong>Multi-language Support\u003C/strong>: Available in Portuguese, English, and Spanish\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"technical-architecture\">Technical Architecture\u003C/h3>\n\u003Cp>Built with modern technologies for scalability and performance:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Frontend\u003C/strong>: Next.js 14 with React 18 and TypeScript\u003C/li>\n\u003Cli>\u003Cstrong>Backend\u003C/strong>: Node.js with Express and Prisma ORM\u003C/li>\n\u003Cli>\u003Cstrong>Database\u003C/strong>: PostgreSQL via Supabase\u003C/li>\n\u003Cli>\u003Cstrong>Styling\u003C/strong>: TailwindCSS with custom design system\u003C/li>\n\u003Cli>\u003Cstrong>Deployment\u003C/strong>: Vercel with automated CI/CD\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-impact\">The Impact\u003C/h2>\n\u003Cp>Since launch, Casa Capoeira has transformed how capoeira schools operate:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>70% reduction\u003C/strong> in administrative overhead\u003C/li>\n\u003Cli>\u003Cstrong>40% increase\u003C/strong> in student retention\u003C/li>\n\u003Cli>\u003Cstrong>15+ academies\u003C/strong> actively using the platform\u003C/li>\n\u003Cli>\u003Cstrong>1000+ students\u003C/strong> managed through the system\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"looking-forward\">Looking Forward\u003C/h2>\n\u003Cp>The platform continues to evolve based on user feedback, with plans for mobile apps, advanced analytics, and integration with capoeira federations worldwide.\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Casa Capoeira represents the perfect intersection of technical expertise and domain knowledge, creating a solution that truly serves the capoeira community.\u003C/em>\u003C/p>",{"headings":253,"localImagePaths":276,"remoteImagePaths":277,"frontmatter":278,"imagePaths":285},[254,257,260,263,267,270,273],{"depth":134,"slug":255,"text":256},"casa-capoeira---revolutionizing-capoeira-school-management","Casa Capoeira - Revolutionizing Capoeira School Management",{"depth":137,"slug":258,"text":259},"the-challenge","The Challenge",{"depth":137,"slug":261,"text":262},"the-solution","The Solution",{"depth":264,"slug":265,"text":266},3,"key-features","Key Features",{"depth":264,"slug":268,"text":269},"technical-architecture","Technical Architecture",{"depth":137,"slug":271,"text":272},"the-impact","The Impact",{"depth":137,"slug":274,"text":275},"looking-forward","Looking Forward",[],[],{"title":207,"description":208,"excerpt":209,"coverImage":210,"coverVideo":211,"tags":279,"techStack":280,"featured":26,"publishedAt":173,"updatedAt":221,"client":222,"duration":223,"role":224,"team":281,"problem":226,"solution":227,"impact":228,"challenges":282,"learnings":283,"liveUrl":239,"githubUrl":240,"status":241,"featuredImage":242,"gallery":284},[54,213,214,53,215],[50,217,218,51,219,82,220],[18],[230,231,232,233],[235,236,237,238],[244,245,246],[],"casa-capoeira.md","upiria",{"id":287,"data":289,"body":327,"filePath":328,"digest":329,"rendered":330,"legacyId":362},{"title":290,"description":291,"excerpt":292,"coverImage":293,"tags":294,"techStack":297,"featured":26,"publishedAt":301,"updatedAt":302,"client":290,"duration":303,"role":304,"team":305,"problem":307,"solution":308,"impact":309,"challenges":310,"learnings":315,"liveUrl":320,"githubUrl":321,"status":241,"featuredImage":322,"gallery":323},"Upiria","Front-end development and testing infrastructure for a cutting-edge startup, focusing on React applications and comprehensive test automation.","Contributed to front-end development and built robust testing infrastructure for a fast-growing startup.","/images/projects/upiria-cover.jpg",[295,296,79,217,80],"Startup","Frontend",[217,82,78,298,299,300],"Jest","Testing Library","GitHub Actions","2023-06-01","2023-12-15","8 months","Frontend Developer & QA Engineer",[18,306],"Upiria Development Team","Startup needed rapid front-end development with reliable testing infrastructure to ensure quality while maintaining fast iteration cycles.","Developed React components and implemented comprehensive testing suite using Playwright and TypeScript, enabling confident deployments and rapid feature development.","Reduced bug reports by 60%, improved development velocity by 40%, and established testing best practices that continue to benefit the team.",[311,312,313,314],"Balancing rapid development with code quality","Setting up reliable CI/CD testing pipeline","Testing complex user interactions and state management","Maintaining test coverage as features evolved rapidly",[316,317,318,319],"Value of testing-first approach in startup environments","Importance of automated testing for rapid iteration","Benefits of TypeScript in reducing runtime errors","How to scale testing practices as team grows","https://www.upiria.com","https://github.com/upiria/upiria-frontend","/images/projects/upiria-hero.jpg",[324,325,326],"/images/projects/upiria-dashboard.jpg","/images/projects/upiria-testing.jpg","/images/projects/upiria-components.jpg","# Upiria - Startup Frontend Development & Testing\n\n## The Challenge\n\nUpiria, a fast-growing startup, needed to rapidly develop and deploy front-end features while maintaining high code quality and reliability. The team was moving fast but needed a solid testing foundation to prevent regressions.\n\n## The Solution\n\nI joined the team to focus on front-end development and establish comprehensive testing practices. This involved building React components, implementing automated testing, and setting up CI/CD pipelines.\n\n### Key Contributions\n\n- **React Component Development**: Built reusable, accessible components following modern React patterns\n- **Testing Infrastructure**: Implemented Playwright for end-to-end testing and Jest for unit testing\n- **TypeScript Integration**: Migrated JavaScript codebase to TypeScript for better type safety\n- **CI/CD Pipeline**: Set up automated testing in GitHub Actions for every pull request\n- **Documentation**: Created testing guidelines and component documentation\n\n### Technical Stack\n\n- **Frontend**: React 18 with TypeScript\n- **Testing**: Playwright for E2E, Jest + Testing Library for unit tests\n- **CI/CD**: GitHub Actions with automated testing\n- **State Management**: React Context + custom hooks\n- **Styling**: CSS Modules with design system\n\n## The Impact\n\nThe testing infrastructure and development practices I implemented had significant impact:\n\n- **60% reduction** in bug reports from production\n- **40% improvement** in development velocity\n- **100% test coverage** for critical user flows\n- **Established best practices** that continue to benefit the team\n\n## Key Learnings\n\nWorking at a startup taught me valuable lessons about balancing speed and quality:\n\n- **Testing-first approach** pays dividends even in fast-moving environments\n- **TypeScript** significantly reduces runtime errors and improves developer experience\n- **Automated testing** enables confident deployments and rapid iteration\n- **Documentation** is crucial for team scaling and knowledge transfer\n\n## Looking Back\n\nThe experience at Upiria reinforced my belief in the importance of solid engineering practices, even in fast-paced startup environments. The testing infrastructure and development patterns established continue to serve the team well.\n\n---\n\n_Startup environments require a unique balance of speed and quality - this project demonstrated how proper testing infrastructure enables both._","src/content/projects/upiria.md","b8f4f764a1c38746",{"html":331,"metadata":332},"\u003Ch1 id=\"upiria---startup-frontend-development--testing\">Upiria - Startup Frontend Development &#x26; Testing\u003C/h1>\n\u003Ch2 id=\"the-challenge\">The Challenge\u003C/h2>\n\u003Cp>Upiria, a fast-growing startup, needed to rapidly develop and deploy front-end features while maintaining high code quality and reliability. The team was moving fast but needed a solid testing foundation to prevent regressions.\u003C/p>\n\u003Ch2 id=\"the-solution\">The Solution\u003C/h2>\n\u003Cp>I joined the team to focus on front-end development and establish comprehensive testing practices. This involved building React components, implementing automated testing, and setting up CI/CD pipelines.\u003C/p>\n\u003Ch3 id=\"key-contributions\">Key Contributions\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>React Component Development\u003C/strong>: Built reusable, accessible components following modern React patterns\u003C/li>\n\u003Cli>\u003Cstrong>Testing Infrastructure\u003C/strong>: Implemented Playwright for end-to-end testing and Jest for unit testing\u003C/li>\n\u003Cli>\u003Cstrong>TypeScript Integration\u003C/strong>: Migrated JavaScript codebase to TypeScript for better type safety\u003C/li>\n\u003Cli>\u003Cstrong>CI/CD Pipeline\u003C/strong>: Set up automated testing in GitHub Actions for every pull request\u003C/li>\n\u003Cli>\u003Cstrong>Documentation\u003C/strong>: Created testing guidelines and component documentation\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"technical-stack\">Technical Stack\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Frontend\u003C/strong>: React 18 with TypeScript\u003C/li>\n\u003Cli>\u003Cstrong>Testing\u003C/strong>: Playwright for E2E, Jest + Testing Library for unit tests\u003C/li>\n\u003Cli>\u003Cstrong>CI/CD\u003C/strong>: GitHub Actions with automated testing\u003C/li>\n\u003Cli>\u003Cstrong>State Management\u003C/strong>: React Context + custom hooks\u003C/li>\n\u003Cli>\u003Cstrong>Styling\u003C/strong>: CSS Modules with design system\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-impact\">The Impact\u003C/h2>\n\u003Cp>The testing infrastructure and development practices I implemented had significant impact:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>60% reduction\u003C/strong> in bug reports from production\u003C/li>\n\u003Cli>\u003Cstrong>40% improvement\u003C/strong> in development velocity\u003C/li>\n\u003Cli>\u003Cstrong>100% test coverage\u003C/strong> for critical user flows\u003C/li>\n\u003Cli>\u003Cstrong>Established best practices\u003C/strong> that continue to benefit the team\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"key-learnings\">Key Learnings\u003C/h2>\n\u003Cp>Working at a startup taught me valuable lessons about balancing speed and quality:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Testing-first approach\u003C/strong> pays dividends even in fast-moving environments\u003C/li>\n\u003Cli>\u003Cstrong>TypeScript\u003C/strong> significantly reduces runtime errors and improves developer experience\u003C/li>\n\u003Cli>\u003Cstrong>Automated testing\u003C/strong> enables confident deployments and rapid iteration\u003C/li>\n\u003Cli>\u003Cstrong>Documentation\u003C/strong> is crucial for team scaling and knowledge transfer\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"looking-back\">Looking Back\u003C/h2>\n\u003Cp>The experience at Upiria reinforced my belief in the importance of solid engineering practices, even in fast-paced startup environments. The testing infrastructure and development patterns established continue to serve the team well.\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Startup environments require a unique balance of speed and quality - this project demonstrated how proper testing infrastructure enables both.\u003C/em>\u003C/p>",{"headings":333,"localImagePaths":352,"remoteImagePaths":353,"frontmatter":354,"imagePaths":361},[334,337,338,339,342,345,346,349],{"depth":134,"slug":335,"text":336},"upiria---startup-frontend-development--testing","Upiria - Startup Frontend Development & Testing",{"depth":137,"slug":258,"text":259},{"depth":137,"slug":261,"text":262},{"depth":264,"slug":340,"text":341},"key-contributions","Key Contributions",{"depth":264,"slug":343,"text":344},"technical-stack","Technical Stack",{"depth":137,"slug":271,"text":272},{"depth":137,"slug":347,"text":348},"key-learnings","Key Learnings",{"depth":137,"slug":350,"text":351},"looking-back","Looking Back",[],[],{"title":290,"description":291,"excerpt":292,"coverImage":293,"tags":355,"techStack":356,"featured":26,"publishedAt":301,"updatedAt":302,"client":290,"duration":303,"role":304,"team":357,"problem":307,"solution":308,"impact":309,"challenges":358,"learnings":359,"liveUrl":320,"githubUrl":321,"status":241,"featuredImage":322,"gallery":360},[295,296,79,217,80],[217,82,78,298,299,300],[18,306],[311,312,313,314],[316,317,318,319],[324,325,326],[],"upiria.md"]