class t{isDevelopment=!1;isProduction=!0;shouldLog(e){return e==="error"?!0:this.isDevelopment}formatMessage(e,o,r){const s=`[${new Date().toISOString()}] [${e.toUpperCase()}]`;return r&&Object.keys(r).length>0?`${s} ${o} ${JSON.stringify(r,null,2)}`:`${s} ${o}`}debug(e,o){this.shouldLog("debug")&&console.log(this.formatMessage("debug",e,o))}info(e,o){this.shouldLog("info")&&console.info(this.formatMessage("info",e,o))}warn(e,o){this.shouldLog("warn")&&console.warn(this.formatMessage("warn",e,o))}error(e,o){this.shouldLog("error")&&console.error(this.formatMessage("error",e,o))}component(e,o,r){this.debug(`[${e}] ${o}`,r)}animation(e,o,r){this.debug(`ðŸŽ¯ [${e}] ${o}`,r)}}const n=new t,{debug:g,info:f,warn:l,error:u,component:h,animation:m}=n;export{n as c};
